#!/usr/bin/env node

/**
 * üöÄ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø SSR –û–®–ò–ë–ö–ò V3
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ usePeriodicSync –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç API –≤—ã–∑–æ–≤—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 */

console.log('üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ SSR –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è V3');
console.log('===================================');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ö—É–∫ –Ω–µ –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ usePeriodicSync...');
try {
  const usePeriodicSync = require('./services/usePeriodicSync.js');
  console.log('‚úÖ usePeriodicSync –∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫');
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ usePeriodicSync:', error.message);
}

// –¢–µ—Å—Ç 2: –ò–º–∏—Ç–∞—Ü–∏—è –≤—ã–∑–æ–≤–∞ —Ö—É–∫–∞ —Å isMounted = false
console.log('\n2. –¢–µ—Å—Ç –≤—ã–∑–æ–≤–∞ —Ö—É–∫–∞ —Å isMounted = false...');
try {
  // –ò–º–∏—Ç–∏—Ä—É–µ–º React —Ö—É–∫–∏
  const mockUseCallback = (fn) => fn;
  const mockUseRef = (initial) => ({ current: initial });
  const mockUseState = (initial) => [initial, () => {}];
  const mockUseEffect = (fn, deps) => {
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å—Ä–∞–∑—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    fn();
  };
  
  // –ú–æ–∫–∞–µ–º React
  const React = {
    useCallback: mockUseCallback,
    useRef: mockUseRef,
    useState: mockUseState,
    useEffect: mockUseEffect
  };
  
  // –ú–æ–∫–∞–µ–º apiService
  const mockApiService = {
    getPlayers: () => {
      console.log('‚ùå API –≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è (–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª)');
      return Promise.resolve({ players: [] });
    },
    getCurrentUser: () => {
      console.log('‚ùå API –≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è (–Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã–ª)');
      return Promise.resolve(null);
    }
  };
  
  // –ó–∞–º–µ–Ω—è–µ–º require –¥–ª—è apiService
  const Module = require('module');
  const originalRequire = Module.prototype.require;
  Module.prototype.require = function(id) {
    if (id === './apiService') {
      return { default: mockApiService };
    }
    return originalRequire.apply(this, arguments);
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å
  const usePeriodicSync = require('./services/usePeriodicSync.js');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å isMounted = false
  console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å isMounted = false...');
  usePeriodicSync([], () => {}, null, () => {}, false);
  
  console.log('‚úÖ –•—É–∫ —Å isMounted = false –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è –±–µ–∑ API –≤—ã–∑–æ–≤–æ–≤');
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π require
  Module.prototype.require = originalRequire;
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ö—É–∫–∞:', error.message);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ö—É–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å isMounted = true
console.log('\n3. –¢–µ—Å—Ç –≤—ã–∑–æ–≤–∞ —Ö—É–∫–∞ —Å isMounted = true...');
try {
  // –ú–æ–∫–∞–µ–º apiService —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  const mockApiService = {
    getPlayers: () => {
      console.log('‚úÖ API –≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è (–æ–∂–∏–¥–∞–µ–º–æ)');
      return Promise.resolve({ players: [] });
    },
    getCurrentUser: () => {
      console.log('‚úÖ API –≤—ã–∑–æ–≤ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è (–æ–∂–∏–¥–∞–µ–º–æ)');
      return Promise.resolve(null);
    }
  };
  
  // –ó–∞–º–µ–Ω—è–µ–º require –¥–ª—è apiService
  const Module = require('module');
  const originalRequire = Module.prototype.require;
  Module.prototype.require = function(id) {
    if (id === './apiService') {
      return { default: mockApiService };
    }
    return originalRequire.apply(this, arguments);
  };
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥—É–ª—å
  const usePeriodicSync = require('./services/usePeriodicSync.js');
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å isMounted = true
  console.log('–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å isMounted = true...');
  usePeriodicSync([], () => {}, null, () => {}, true);
  
  console.log('‚úÖ –•—É–∫ —Å isMounted = true –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è —Å API –≤—ã–∑–æ–≤–∞–º–∏');
  
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π require
  Module.prototype.require = originalRequire;
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ö—É–∫–∞:', error.message);
}

console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù');
console.log('üìù –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, SSR –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
console.log('üìù usePeriodicSync —Ç–µ–ø–µ—Ä—å –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç API –≤—ã–∑–æ–≤—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ');
