#!/bin/bash

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç–æ–≤ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
echo "üíÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–æ—Ä—Ç–æ–≤ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
echo "=============================================="

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[OK]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
info() { echo -e "${BLUE}[INFO]${NC} $1"; }

cd /var/www/malabar || { error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"; exit 1; }

echo ""
echo "üíÄ 1. –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –í–°–ï–• –ü–†–û–¶–ï–°–°–û–í"
echo "==========================================="

info "–£–±–∏–≤–∞–µ–º –≤—Å–µ Node.js –ø—Ä–æ—Ü–µ—Å—Å—ã..."

# –£–±–∏–≤–∞–µ–º –≤—Å–µ node –ø—Ä–æ—Ü–µ—Å—Å—ã
pkill -9 -f "node" 2>/dev/null && log "–í—Å–µ Node –ø—Ä–æ—Ü–µ—Å—Å—ã —É–±–∏—Ç—ã"

# –£–±–∏–≤–∞–µ–º –≤—Å–µ npm –ø—Ä–æ—Ü–µ—Å—Å—ã  
pkill -9 -f "npm" 2>/dev/null && log "–í—Å–µ npm –ø—Ä–æ—Ü–µ—Å—Å—ã —É–±–∏—Ç—ã"

# –£–±–∏–≤–∞–µ–º PM2
pm2 kill 2>/dev/null && log "PM2 —É–±–∏—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é"

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã
info "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã..."

# –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç–∞—Ö
for port in 3000 3001; do
    PIDS=$(lsof -ti:$port 2>/dev/null || true)
    if [ -n "$PIDS" ]; then
        echo "–£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É $port: $PIDS"
        echo "$PIDS" | xargs kill -9 2>/dev/null || true
        log "–ü–æ—Ä—Ç $port –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    else
        log "–ü–æ—Ä—Ç $port —É–∂–µ —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
done

# –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
sleep 5

echo ""
echo "üîç 2. –ü–†–û–í–ï–†–ö–ê –û–ß–ò–°–¢–ö–ò"
echo "====================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã..."

PORT_3001_CHECK=$(ss -tulpn 2>/dev/null | grep :3001 | wc -l)
PORT_3000_CHECK=$(ss -tulpn 2>/dev/null | grep :3000 | wc -l)

echo "üìä –°—Ç–∞—Ç—É—Å –ø–æ—Ä—Ç–æ–≤:"
echo "  ‚Ä¢ –ü–æ—Ä—Ç 3001: $([ "$PORT_3001_CHECK" -eq 0 ] && echo "—Å–≤–æ–±–æ–¥–µ–Ω ‚úÖ" || echo "–ó–ê–ù–Ø–¢ ‚ùå")"
echo "  ‚Ä¢ –ü–æ—Ä—Ç 3000: $([ "$PORT_3000_CHECK" -eq 0 ] && echo "—Å–≤–æ–±–æ–¥–µ–Ω ‚úÖ" || echo "–ó–ê–ù–Ø–¢ ‚ùå")"

if [ "$PORT_3001_CHECK" -gt 0 ]; then
    error "–ü–æ—Ä—Ç 3001 –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç!"
    ss -tulpn | grep :3001
fi

if [ "$PORT_3000_CHECK" -gt 0 ]; then
    error "–ü–æ—Ä—Ç 3000 –≤—Å–µ –µ—â–µ –∑–∞–Ω—è—Ç!"
    ss -tulpn | grep :3000
fi

if [ "$PORT_3001_CHECK" -gt 0 ] || [ "$PORT_3000_CHECK" -gt 0 ]; then
    error "–ü–æ—Ä—Ç—ã –Ω–µ –æ—Å–≤–æ–±–æ–¥–∏–ª–∏—Å—å! –ù—É–∂–µ–Ω –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ VPS"
    echo ""
    echo "üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –º–µ—Ä—ã:"
    echo "  sudo systemctl restart networking"
    echo "  sudo reboot"
    exit 1
fi

log "–í—Å–µ –ø–æ—Ä—Ç—ã —Å–≤–æ–±–æ–¥–Ω—ã!"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ node –ø—Ä–æ—Ü–µ—Å—Å—ã —É–±–∏—Ç—ã
NODE_COUNT=$(ps aux | grep -v grep | grep node | wc -l)
echo "  ‚Ä¢ Node –ø—Ä–æ—Ü–µ—Å—Å—ã: $([ "$NODE_COUNT" -eq 0 ] && echo "–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç ‚úÖ" || echo "$NODE_COUNT –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ ‚ùå")"

if [ "$NODE_COUNT" -gt 0 ]; then
    warn "–ï—Å—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è node –ø—Ä–æ—Ü–µ—Å—Å—ã:"
    ps aux | grep -v grep | grep node
fi

echo ""
echo "üìÅ 3. –ü–û–î–ì–û–¢–û–í–ö–ê –ö –ó–ê–ü–£–°–ö–£"
echo "========================="

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
mkdir -p logs
rm -f *.pid
log "–ü–∞–ø–∫–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É
if [ ! -d ".next" ]; then
    info "–°–±–æ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..."
    
    timeout 300 npm run build > logs/build.log 2>&1
    
    if [ $? -eq 0 ] && [ -d ".next" ]; then
        log "–°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å–ø–µ—à–Ω–∞ ‚úÖ"
    else
        error "–û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏!"
        tail -10 logs/build.log
        exit 1
    fi
else
    log "–°–±–æ—Ä–∫–∞ .next –Ω–∞–π–¥–µ–Ω–∞ ‚úÖ"
fi

echo ""
echo "üñ•Ô∏è 4. –ó–ê–ü–£–°–ö –ë–ï–ö–ï–ù–î–ê (–ø–æ—Ä—Ç 3001)"
echo "================================"

info "–ó–∞–ø—É—Å–∫–∞–µ–º –±–µ–∫–µ–Ω–¥ –≤ –ø–∞–ø–∫–µ server..."

cd server
nohup npm start > ../logs/backend.log 2>&1 &
BACKEND_PID=$!
cd ..

if [ -n "$BACKEND_PID" ]; then
    echo $BACKEND_PID > backend.pid
    log "–ë–µ–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–∫–µ–Ω–¥!"
    exit 1
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–µ–∫–µ–Ω–¥–∞
info "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±–µ–∫–µ–Ω–¥–∞ (15 —Å–µ–∫—É–Ω–¥)..."
sleep 15

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–µ–∫–µ–Ω–¥
if ss -tulpn 2>/dev/null | grep -q ":3001"; then
    log "–ë–µ–∫–µ–Ω–¥ –∑–∞–Ω—è–ª –ø–æ—Ä—Ç 3001 ‚úÖ"
    
    # –¢–µ—Å—Ç API
    API_TEST=$(timeout 10 curl -s "http://localhost:3001/api/health" 2>/dev/null || echo "timeout")
    
    if echo "$API_TEST" | grep -q "OK"; then
        log "API health —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ"
    else
        warn "API health: $API_TEST"
    fi
else
    error "–ë–µ–∫–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 3001!"
    echo ""
    echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ –±–µ–∫–µ–Ω–¥–∞:"
    tail -10 logs/backend.log
    exit 1
fi

echo ""
echo "üåê 5. –ó–ê–ü–£–°–ö –§–†–û–ù–¢–ï–ù–î–ê (–ø–æ—Ä—Ç 3000)"
echo "=================================="

info "–ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ production —Ä–µ–∂–∏–º–µ..."

nohup npm start > logs/frontend.log 2>&1 &
FRONTEND_PID=$!

if [ -n "$FRONTEND_PID" ]; then
    echo $FRONTEND_PID > frontend.pid
    log "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
else
    error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥!"
    exit 1
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
info "–ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–¥–æ 60 —Å–µ–∫—É–Ω–¥)..."

WAIT_COUNT=0
while [ $WAIT_COUNT -lt 12 ]; do
    if ss -tulpn 2>/dev/null | grep -q ":3000"; then
        log "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–Ω—è–ª –ø–æ—Ä—Ç 3000 ‚úÖ"
        break
    fi
    
    sleep 5
    WAIT_COUNT=$((WAIT_COUNT + 1))
    echo "  ... –æ–∂–∏–¥–∞–Ω–∏–µ $((WAIT_COUNT * 5)) —Å–µ–∫"
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
if ss -tulpn 2>/dev/null | grep -q ":3000"; then
    log "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è ‚úÖ"
    
    # –¢–µ—Å—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    sleep 8
    FRONTEND_TEST=$(timeout 15 curl -s -o /dev/null -w "%{http_code}" "http://localhost:3000" 2>/dev/null || echo "timeout")
    
    if [ "$FRONTEND_TEST" = "200" ]; then
        log "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç HTTP 200 ‚úÖ"
    else
        warn "–§—Ä–æ–Ω—Ç–µ–Ω–¥ HTTP: $FRONTEND_TEST"
    fi
else
    warn "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    echo ""
    echo "üîç –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:"
    tail -10 logs/frontend.log
fi

echo ""
echo "üìä –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢"
echo "===================="

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
PORT_3001=$(ss -tulpn 2>/dev/null | grep :3001 | wc -l)
PORT_3000=$(ss -tulpn 2>/dev/null | grep :3000 | wc -l)
NODE_PROCESSES=$(ps aux | grep -v grep | grep node | wc -l)

echo "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
echo "  ‚Ä¢ –ë–µ–∫–µ–Ω–¥ (3001): $([ "$PORT_3001" -gt 0 ] && echo "—Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ" || echo "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚ùå")"
echo "  ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥ (3000): $([ "$PORT_3000" -gt 0 ] && echo "—Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ" || echo "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚ùå")"
echo "  ‚Ä¢ Node –ø—Ä–æ—Ü–µ—Å—Å—ã: $NODE_PROCESSES"

if [ "$PORT_3001" -gt 0 ] && [ "$PORT_3000" -gt 0 ]; then
    log "üéâ –û–ë–ê –°–ï–†–í–ò–°–ê –ó–ê–ü–£–©–ï–ù–´ –ò –†–ê–ë–û–¢–ê–Æ–¢!"
    echo ""
    echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:"
    echo "  ‚Ä¢ http://46.173.17.229:3000"
    echo "  ‚Ä¢ http://vet-klinika-moscow.ru:3000"
    echo ""
    echo "üîå API –¥–æ—Å—Ç—É–ø–µ–Ω:"
    echo "  ‚Ä¢ http://46.173.17.229:3001/api/health"
    echo "  ‚Ä¢ http://46.173.17.229:3001/api/players"
    echo ""
    echo "‚úÖ –ü—Ä–æ–µ–∫—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    
elif [ "$PORT_3001" -gt 0 ]; then
    warn "‚ö†Ô∏è –ë–µ–∫–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç, —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è..."
    echo ""
    echo "‚úÖ –ë–µ–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤"
    echo "‚è≥ –î–∞–π—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É –µ—â–µ 1-2 –º–∏–Ω—É—Ç—ã"
    echo ""
    echo "üîç –°–ª–µ–¥–∏—Ç–µ –∑–∞ –ª–æ–≥–∞–º–∏:"
    echo "  tail -f logs/frontend.log"
    
else
    error "‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–ø—É—Å–∫–æ–º"
    echo ""
    echo "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
    echo "  ‚Ä¢ –õ–æ–≥–∏ –±–µ–∫–µ–Ω–¥–∞: tail -20 logs/backend.log"
    echo "  ‚Ä¢ –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: tail -20 logs/frontend.log"
    echo "  ‚Ä¢ –ü—Ä–æ—Ü–µ—Å—Å—ã: ps aux | grep node"
fi

echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏:"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: ps aux | grep node"
echo "  ‚Ä¢ –õ–æ–≥–∏ –±–µ–∫–µ–Ω–¥–∞: tail -f logs/backend.log"
echo "  ‚Ä¢ –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: tail -f logs/frontend.log"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–µ–∫–µ–Ω–¥–∞: kill $(cat backend.pid 2>/dev/null)"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: kill $(cat frontend.pid 2>/dev/null)"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö: pkill -f node"
echo ""
echo "üß™ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç:"
echo "  ./test-simple-vps.sh"
