#!/bin/bash

# –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ —á–∏—Å—Ç–∫–∏
# –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ–≥–æ —Å –Ω—É–ª—è

echo "üÜò –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –°–ï–†–í–ï–†–ê"
echo "===================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /var/www/malabar || {
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /var/www/malabar –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    echo ""
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–æ–∑–¥–∞—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é:"
    echo "  sudo mkdir -p /var/www/malabar"
    echo "  cd /var/www/malabar"
    exit 1
}

echo "üìç –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
echo "üìä –ú–µ—Å—Ç–æ –î–û –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
df -h . | head -2

echo ""
echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫—É!"
echo "–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏."
echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –ù–ï –±—É–¥—É—Ç –∑–∞—Ç—Ä–æ–Ω—É—Ç—ã."

# –ü–∞—É–∑–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–Ω–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –≤–≤–æ–¥–∞)
sleep 3

echo ""
echo "üßπ 1. –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê"
echo "==================="

info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã..."
timeout 10 pm2 delete all 2>/dev/null && log "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã —É–¥–∞–ª–µ–Ω—ã" || info "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
pkill -f "node.*server" 2>/dev/null && log "Node —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" || info "Node —Å–µ—Ä–≤–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
pkill -f "npm.*start" 2>/dev/null && log "npm –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" || info "npm –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

sleep 3

info "–£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
rm -rf node_modules server/node_modules .next out 2>/dev/null && log "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ —Å–±–æ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω—ã"
rm -f package-lock.json server/package-lock.json 2>/dev/null && log "lock —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"
rm -rf logs/*.log 2>/dev/null && log "–õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã"

info "–û—á–∏—â–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∫—ç—à–∏..."
npm cache clean --force 2>/dev/null && log "npm cache –æ—á–∏—â–µ–Ω"
timeout 10 pm2 flush 2>/dev/null && log "PM2 –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã" || info "PM2 –ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p logs server
chmod 755 logs server

echo ""
echo "üîç 2. –ü–†–û–í–ï–†–ö–ê –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–• –§–ê–ô–õ–û–í"
echo "======================================="

CRITICAL_FILES_MISSING=0

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "package.json" ]; then
    error "package.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    CRITICAL_FILES_MISSING=$((CRITICAL_FILES_MISSING + 1))
else
    log "package.json ‚úì"
fi

if [ ! -f "server/package.json" ]; then
    error "server/package.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    CRITICAL_FILES_MISSING=$((CRITICAL_FILES_MISSING + 1))
else
    log "server/package.json ‚úì"
fi

if [ ! -f "server/server.js" ]; then
    error "server/server.js –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    CRITICAL_FILES_MISSING=$((CRITICAL_FILES_MISSING + 1))
else
    log "server/server.js ‚úì"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞
CRITICAL_DIRS=("pages" "components" "services" "server")
for dir in "${CRITICAL_DIRS[@]}"; do
    if [ ! -d "$dir" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
        CRITICAL_FILES_MISSING=$((CRITICAL_FILES_MISSING + 1))
    else
        log "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir ‚úì"
    fi
done

if [ $CRITICAL_FILES_MISSING -gt 0 ]; then
    error "–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ô–õ–´ –û–¢–°–£–¢–°–¢–í–£–Æ–¢! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º: $CRITICAL_FILES_MISSING"
    echo ""
    echo "üÜò –í–û–ó–ú–û–ñ–ù–´–ï –†–ï–®–ï–ù–ò–Ø:"
    echo "  1. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ backup:"
    echo "     tar -xzf backup_*.tar.gz"
    echo ""
    echo "  2. –ö–ª–æ–Ω–∏—Ä—É–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –∑–∞–Ω–æ–≤–æ:"
    echo "     git clone <repository_url> ."
    echo ""
    echo "  3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã —Å –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞"
    exit 1
fi

echo ""
echo "üóÉÔ∏è 3. –ü–†–û–í–ï–†–ö–ê –ò –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ë–ê–ó–´ –î–ê–ù–ù–´–•"
echo "==========================================="

if [ -f "server/malabar.db" ]; then
    DB_SIZE=$(stat -c%s "server/malabar.db" 2>/dev/null || echo "0")
    if [ "$DB_SIZE" -gt 1000 ]; then
        log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞ –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ ($DB_SIZE –±–∞–π—Ç)"
    else
        warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞, –Ω–æ –ø—É—Å—Ç–∞—è ($DB_SIZE –±–∞–π—Ç)"
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 664 server/malabar.db 2>/dev/null
    chown www-data:www-data server/malabar.db 2>/dev/null || true
    
elif [ -f "malabar.db" ]; then
    warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞ –≤ –∫–æ—Ä–Ω–µ, –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ server/"
    mv malabar.db server/ && log "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∞"
    chmod 664 server/malabar.db 2>/dev/null
    chown www-data:www-data server/malabar.db 2>/dev/null || true
else
    warn "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –ø—É—Å—Ç—É—é..."
    touch server/malabar.db
    chmod 664 server/malabar.db 2>/dev/null
    chown www-data:www-data server/malabar.db 2>/dev/null || true
    log "–ü—É—Å—Ç–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
fi

echo ""
echo "üì¶ 4. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô (–®–ê–ì 1 - –§–†–û–ù–¢–ï–ù–î)"
echo "=============================================="

info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
info "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 5-15 –º–∏–Ω—É—Ç..."

# –ü–æ–ø—ã—Ç–∫–∞ 1: –æ–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
timeout 900 npm install --no-optional --no-audit --prefer-offline 2>/dev/null
INSTALL_RESULT=$?

if [ $INSTALL_RESULT -eq 0 ]; then
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–ø–æ–ø—ã—Ç–∫–∞ 1)"
elif [ $INSTALL_RESULT -eq 124 ]; then
    warn "‚è∞ –¢–∞–π–º–∞—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ (15 –º–∏–Ω—É—Ç), –ø—Ä–æ–±—É–µ–º –±—ã—Å—Ç—Ä—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: —Ç–æ–ª—å–∫–æ production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    timeout 600 npm install --production --no-optional --no-audit 2>/dev/null
    INSTALL_RESULT=$?
    
    if [ $INSTALL_RESULT -eq 0 ]; then
        log "‚úÖ Production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–ø–æ–ø—ã—Ç–∫–∞ 2)"
    else
        warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
    fi
else
    warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ -d "node_modules" ]; then
    MODULES_COUNT=$(ls node_modules 2>/dev/null | wc -l)
    log "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: $MODULES_COUNT"
else
    error "‚ùå node_modules –Ω–µ —Å–æ–∑–¥–∞–Ω–∞!"
fi

echo ""
echo "üì¶ 5. –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô (–®–ê–ì 2 - –ë–≠–ö–ï–ù–î)"
echo "============================================="

info "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞..."

cd server

# –ü–æ–ø—ã—Ç–∫–∞ 1: –æ–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
timeout 600 npm install --no-optional --no-audit --prefer-offline 2>/dev/null
INSTALL_RESULT=$?

if [ $INSTALL_RESULT -eq 0 ]; then
    log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–ø–æ–ø—ã—Ç–∫–∞ 1)"
elif [ $INSTALL_RESULT -eq 124 ]; then
    warn "‚è∞ –¢–∞–π–º–∞—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏, –ø—Ä–æ–±—É–µ–º production..."
    
    # –ü–æ–ø—ã—Ç–∫–∞ 2: —Ç–æ–ª—å–∫–æ production
    timeout 300 npm install --production --no-optional 2>/dev/null
    INSTALL_RESULT=$?
    
    if [ $INSTALL_RESULT -eq 0 ]; then
        log "‚úÖ Production –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã (–ø–æ–ø—ã—Ç–∫–∞ 2)"
    else
        warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞"
    fi
else
    warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ -d "node_modules" ]; then
    MODULES_COUNT=$(ls node_modules 2>/dev/null | wc -l)
    log "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π –±—ç–∫–µ–Ω–¥–∞: $MODULES_COUNT"
else
    error "‚ùå server/node_modules –Ω–µ —Å–æ–∑–¥–∞–Ω–∞!"
fi

cd ..

echo ""
echo "üèóÔ∏è 6. –°–ë–û–†–ö–ê –ü–†–û–ï–ö–¢–ê"
echo "=================="

info "–°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..."
timeout 300 npm run build 2>/dev/null
BUILD_RESULT=$?

if [ $BUILD_RESULT -eq 0 ]; then
    log "‚úÖ –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
elif [ $BUILD_RESULT -eq 124 ]; then
    warn "‚è∞ –°–±–æ—Ä–∫–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç (5 –º–∏–Ω—É—Ç)"
else
    warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ (–∫–æ–¥: $BUILD_RESULT)"
fi

if [ -d ".next" ]; then
    log ".next –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å–æ–∑–¥–∞–Ω–∞"
else
    warn ".next –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞"
fi

echo ""
echo "‚öôÔ∏è 7. –°–û–ó–î–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ô"
echo "=========================="

# –°–æ–∑–¥–∞–µ–º PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
cat > ecosystem.config.js << 'EOF'
module.exports = {
  apps: [
    {
      name: 'malabar-server',
      script: 'server.js',
      cwd: './server',
      instances: 1,
      exec_mode: 'fork',
      watch: false,
      max_memory_restart: '1G',
      env: {
        NODE_ENV: 'production',
        PORT: 3001
      },
      error_file: '../logs/server-error.log',
      out_file: '../logs/server-out.log',
      log_file: '../logs/server-combined.log',
      time: true
    },
    {
      name: 'malabar-frontend',
      script: 'npm',
      args: 'start',
      cwd: './',
      instances: 1,
      exec_mode: 'fork',
      watch: false,
      max_memory_restart: '1G',
      env: {
        NODE_ENV: 'production',
        PORT: 3000
      },
      error_file: './logs/frontend-error.log',
      out_file: './logs/frontend-out.log',
      log_file: './logs/frontend-combined.log',
      time: true
    }
  ]
};
EOF

log "ecosystem.config.js —Å–æ–∑–¥–∞–Ω"

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod 755 . server logs
chown -R www-data:www-data . 2>/dev/null || true

echo ""
echo "üöÄ 8. –¢–ï–°–¢–û–í–´–ô –ó–ê–ü–£–°–ö"
echo "==================="

info "–ó–∞–ø—É—Å–∫–∞–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã..."
timeout 30 pm2 start ecosystem.config.js 2>/dev/null
START_RESULT=$?

if [ $START_RESULT -eq 0 ]; then
    log "‚úÖ PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã"
elif [ $START_RESULT -eq 124 ]; then
    warn "‚è∞ –ó–∞–ø—É—Å–∫ –ø—Ä–µ–≤—ã—Å–∏–ª —Ç–∞–π–º–∞—É—Ç"
else
    warn "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ PM2"
fi

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
sleep 8

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
PM2_PROCESSES=$(timeout 5 pm2 jlist 2>/dev/null | jq length 2>/dev/null || echo "0")
log "PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∑–∞–ø—É—â–µ–Ω–æ: $PM2_PROCESSES"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
PORTS_3000=$(ss -tulpn 2>/dev/null | grep :3000 | wc -l)
PORTS_3001=$(ss -tulpn 2>/dev/null | grep :3001 | wc -l)

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º API..."
API_RESPONSE=$(timeout 10 curl -s "http://localhost:3001/api/health" 2>/dev/null || echo "timeout")

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –≠–ö–°–¢–†–ï–ù–ù–û–ì–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø"
echo "======================================"

echo "üìä –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ –ü–û–°–õ–ï –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:"
df -h . | head -2

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
FRONTEND_MODULES=$(ls node_modules 2>/dev/null | wc -l)
BACKEND_MODULES=$(ls server/node_modules 2>/dev/null | wc -l)
echo "  ‚Ä¢ –ú–æ–¥—É–ª–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: $FRONTEND_MODULES"
echo "  ‚Ä¢ –ú–æ–¥—É–ª–µ–π –±—ç–∫–µ–Ω–¥–∞: $BACKEND_MODULES"
echo "  ‚Ä¢ PM2 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $PM2_PROCESSES"
echo "  ‚Ä¢ –ü–æ—Ä—Ç 3000: $([ "$PORTS_3000" -gt 0 ] && echo "–∑–∞–Ω—è—Ç ‚úÖ" || echo "—Å–≤–æ–±–æ–¥–µ–Ω ‚ö†Ô∏è")"
echo "  ‚Ä¢ –ü–æ—Ä—Ç 3001: $([ "$PORTS_3001" -gt 0 ] && echo "–∑–∞–Ω—è—Ç ‚úÖ" || echo "—Å–≤–æ–±–æ–¥–µ–Ω ‚ö†Ô∏è")"
echo "  ‚Ä¢ API: $(echo "$API_RESPONSE" | grep -q "OK" && echo "—Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ" || echo "–Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç ‚ö†Ô∏è")"

echo ""
# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if [ "$FRONTEND_MODULES" -gt 50 ] && [ "$BACKEND_MODULES" -gt 10 ] && [ "$PORTS_3000" -gt 0 ] && [ "$PORTS_3001" -gt 0 ]; then
    echo -e "${GREEN}üéâ –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û –ó–ê–í–ï–†–®–ï–ù–û!${NC}"
    echo ""
    echo "üåê –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ:"
    echo "  ‚Ä¢ http://$(hostname -I | awk '{print $1}'):3000"
    echo "  ‚Ä¢ http://46.173.17.229:3000"
    echo "  ‚Ä¢ http://vet-klinika-moscow.ru:3000"
elif [ "$FRONTEND_MODULES" -gt 20 ] && [ "$BACKEND_MODULES" -gt 5 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ß–ê–°–¢–ò–ß–ù–û –ó–ê–í–ï–†–®–ï–ù–û${NC}"
    echo ""
    echo "üîß –ó–∞–≤–µ—Ä—à–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É:"
    echo "  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 restart all"
    echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: ./test-after-restore-vps.sh"
    echo "  3. –õ–æ–≥–∏: pm2 logs"
else
    echo -e "${RED}‚ùå –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ù–ï –£–î–ê–õ–û–°–¨${NC}"
    echo ""
    echo "üÜò –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:"
    echo "  ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    echo "  ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã"
    echo "  ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º"
    echo ""
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "  1. –û—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ: df -h"
    echo "  2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∞–π–ª—ã: ./diagnose-after-cleanup-vps.sh"
    echo "  3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑ backup"
fi

echo ""
echo "üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º:"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å: pm2 status"
echo "  ‚Ä¢ –õ–æ–≥–∏: pm2 logs"
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart all"
echo "  ‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./diagnose-after-cleanup-vps.sh"
echo "  ‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ./test-after-restore-vps.sh"
