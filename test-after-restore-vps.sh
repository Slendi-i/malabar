#!/bin/bash

# –ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞
# –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ë–ï–ó –≤–∏—Å—è—â–∏—Ö –∫–æ–º–∞–Ω–¥

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞..."
echo "==============================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[PASS]${NC} $1"
}

error() {
    echo -e "${RED}[FAIL]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

info() {
    echo -e "${BLUE}[TEST]${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /var/www/malabar || {
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /var/www/malabar –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
}

TESTS_TOTAL=0
TESTS_PASSED=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
test_result() {
    TESTS_TOTAL=$((TESTS_TOTAL + 1))
    if [ $1 -eq 0 ]; then
        TESTS_PASSED=$((TESTS_PASSED + 1))
        log "$2"
    else
        error "$2"
    fi
}

echo ""
echo "üîç 1. –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
echo "====================="

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞..."
[ -f "package.json" ]; test_result $? "package.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -f "server/server.js" ]; test_result $? "server.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -f "server/malabar.db" ]; test_result $? "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -d "node_modules" ]; test_result $? "node_modules —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
[ -d "server/node_modules" ]; test_result $? "server/node_modules —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "üîß 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
echo "======================="

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã..."
PM2_COUNT=$(timeout 5 pm2 jlist 2>/dev/null | jq length 2>/dev/null || echo "0")
[ "$PM2_COUNT" -gt 0 ]; test_result $? "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã ($PM2_COUNT)"

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã..."
ss -tulpn 2>/dev/null | grep -q ":3001"; test_result $? "–ü–æ—Ä—Ç 3001 (API) —Å–ª—É—à–∞–µ—Ç—Å—è"
ss -tulpn 2>/dev/null | grep -q ":3000"; test_result $? "–ü–æ—Ä—Ç 3000 (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥) —Å–ª—É—à–∞–µ—Ç—Å—è"

echo ""
echo "üåê 3. API —Ç–µ—Å—Ç—ã"
echo "=============="

info "–¢–µ—Å—Ç 1: Health check API..."
API_HEALTH=$(timeout 10 curl -s "http://localhost:3001/api/health" 2>/dev/null || echo "timeout")
echo "$API_HEALTH" | grep -q "OK"; test_result $? "API health check –æ—Ç–≤–µ—á–∞–µ—Ç"

info "–¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤..."
API_PLAYERS=$(timeout 10 curl -s "http://localhost:3001/api/players" 2>/dev/null || echo "timeout")
echo "$API_PLAYERS" | grep -q "players"; test_result $? "API –∏–≥—Ä–æ–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç"

if echo "$API_PLAYERS" | jq .players > /dev/null 2>&1; then
    PLAYERS_COUNT=$(echo "$API_PLAYERS" | jq '.players | length' 2>/dev/null || echo "0")
    [ "$PLAYERS_COUNT" -gt 0 ]; test_result $? "–í –±–∞–∑–µ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏ ($PLAYERS_COUNT)"
else
    test_result 1 "–û—Ç–≤–µ—Ç API –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
fi

info "–¢–µ—Å—Ç 3: –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞..."
if echo "$API_PLAYERS" | jq .players > /dev/null 2>&1; then
    FIRST_PLAYER=$(echo "$API_PLAYERS" | jq '.players[0]' 2>/dev/null)
    PLAYER_ID=$(echo "$FIRST_PLAYER" | jq -r '.id' 2>/dev/null)
    
    if [ "$PLAYER_ID" != "null" ] && [ "$PLAYER_ID" != "" ]; then
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        TEST_DATA=$(echo "$FIRST_PLAYER" | jq '. + {name: "Test API Update"}' 2>/dev/null)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        UPDATE_RESPONSE=$(timeout 10 curl -s -o /dev/null -w "%{http_code}" -X PUT \
            -H "Content-Type: application/json" \
            -d "$TEST_DATA" \
            "http://localhost:3001/api/players/$PLAYER_ID" 2>/dev/null || echo "timeout")
        
        [ "$UPDATE_RESPONSE" = "200" ]; test_result $? "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        timeout 10 curl -s -X PUT \
            -H "Content-Type: application/json" \
            -d "$FIRST_PLAYER" \
            "http://localhost:3001/api/players/$PLAYER_ID" > /dev/null 2>&1
    else
        test_result 1 "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ID –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞"
    fi
else
    test_result 1 "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤"
fi

echo ""
echo "üîå 4. WebSocket —Ç–µ—Å—Ç"
echo "=================="

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º WebSocket endpoint..."
WS_RESPONSE=$(timeout 5 curl -I -s "http://localhost:3001/ws" 2>/dev/null | head -1 || echo "timeout")
echo "$WS_RESPONSE" | grep -qE "(426|101|Bad Request)"; test_result $? "WebSocket endpoint –¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "üíæ 5. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
echo "================"

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö..."
[ -r "server/malabar.db" ]; test_result $? "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è"
[ -w "server/malabar.db" ]; test_result $? "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏"

if command -v sqlite3 > /dev/null; then
    info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ë–î..."
    DB_TABLES=$(echo ".tables" | sqlite3 server/malabar.db 2>/dev/null | wc -w)
    [ "$DB_TABLES" -gt 0 ]; test_result $? "–í –ë–î –µ—Å—Ç—å —Ç–∞–±–ª–∏—Ü—ã ($DB_TABLES)"
    
    echo "SELECT name FROM sqlite_master WHERE type='table';" | sqlite3 server/malabar.db 2>/dev/null | grep -q "players"
    test_result $? "–¢–∞–±–ª–∏—Ü–∞ players —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    warn "sqlite3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –ë–î"
fi

echo ""
echo "üåê 6. –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ç–µ—Å—Ç"
echo "=================="

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
FRONTEND_RESPONSE=$(timeout 10 curl -s -o /dev/null -w "%{http_code}" "http://localhost:3000" 2>/dev/null || echo "timeout")
[ "$FRONTEND_RESPONSE" = "200" ]; test_result $? "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP $FRONTEND_RESPONSE)"

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "=========================="

TESTS_FAILED=$((TESTS_TOTAL - TESTS_PASSED))
SUCCESS_RATE=$((TESTS_PASSED * 100 / TESTS_TOTAL))

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  ‚Ä¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TESTS_TOTAL"
echo -e "  ‚Ä¢ –ü—Ä–æ—à–ª–æ: ${GREEN}$TESTS_PASSED${NC}"
echo -e "  ‚Ä¢ –ù–µ –ø—Ä–æ—à–ª–æ: ${RED}$TESTS_FAILED${NC}"
echo "  ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $SUCCESS_RATE%"

echo ""
if [ $TESTS_FAILED -eq 0 ]; then
    echo -e "${GREEN}üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò! –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –∏–¥–µ–∞–ª—å–Ω–æ!${NC}"
    echo ""
    echo "üåê –°–∞–π—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:"
    echo "  ‚Ä¢ http://$(hostname -I | awk '{print $1}'):3000"
    echo "  ‚Ä¢ http://46.173.17.229:3000"
    echo "  ‚Ä¢ http://vet-klinika-moscow.ru:3000"
    echo ""
    echo "‚úÖ –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:"
    echo "  ‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç"
    echo "  ‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î"
    echo "  ‚Ä¢ Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç"
elif [ $TESTS_FAILED -le 2 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ï–°–¢–¨ –ú–ï–õ–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ (${TESTS_FAILED} —Ç–µ—Å—Ç–æ–≤)${NC}"
    echo ""
    echo "üîß –°–∞–π—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ —Ç—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è:"
    echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs"
    echo "  2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 restart all"
    echo "  3. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
elif [ $TESTS_FAILED -le 5 ]; then
    echo -e "${YELLOW}üîß –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–†–ê–ë–û–¢–ö–ê (${TESTS_FAILED} —Ç–µ—Å—Ç–æ–≤)${NC}"
    echo ""
    echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:"
    echo "  1. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart all"
    echo "  2. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./diagnose-after-cleanup-vps.sh"
    echo "  3. –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./restore-after-cleanup-vps.sh"
else
    echo -e "${RED}‚ùå –°–ï–†–¨–ï–ó–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ (${TESTS_FAILED} —Ç–µ—Å—Ç–æ–≤)${NC}"
    echo ""
    echo "üÜò –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ:"
    echo "  1. –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./emergency-restore-vps.sh"
    echo "  2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ: df -h"
    echo "  3. –ê–Ω–∞–ª–∏–∑ –ª–æ–≥–æ–≤: pm2 logs"
fi

echo ""
echo "üìã –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: pm2 status"
echo "  ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: pm2 logs"
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart all"
echo "  ‚Ä¢ –û—Å—Ç–∞–Ω–æ–≤–∫–∞: pm2 stop all"

echo ""
echo "üí° –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –æ—Å—Ç–∞–ª–∏—Å—å:"
echo "  ‚Ä¢ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./diagnose-after-cleanup-vps.sh"
echo "  ‚Ä¢ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./restore-after-cleanup-vps.sh"
echo "  ‚Ä¢ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º: ./emergency-restore-vps.sh"

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤—ã—Ö–æ–¥–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
if [ $TESTS_FAILED -eq 0 ]; then
    exit 0
elif [ $TESTS_FAILED -le 2 ]; then
    exit 1
else
    exit 2
fi
