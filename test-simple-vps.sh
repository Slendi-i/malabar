#!/bin/bash

# –ü—Ä–æ—Å—Ç–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏

echo "üß™ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
echo "======================================="

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[PASS]${NC} $1"; }
error() { echo -e "${RED}[FAIL]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
info() { echo -e "${BLUE}[TEST]${NC} $1"; }

cd /var/www/malabar || { error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"; exit 1; }

TESTS=0
PASSED=0

test_check() {
    TESTS=$((TESTS + 1))
    if [ $1 -eq 0 ]; then
        PASSED=$((PASSED + 1))
        log "$2"
    else
        error "$2"
    fi
}

echo ""
echo "üìÅ 1. –§–∞–π–ª—ã –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞"
echo "======================="

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
[ -f "package.json" ]; test_check $? "package.json —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -f "server/server.js" ]; test_check $? "server.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -f "server/malabar.db" ]; test_check $? "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
[ -d "node_modules" ]; test_check $? "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
[ -d "server/node_modules" ]; test_check $? "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

echo ""
echo "üîß 2. –ü—Ä–æ—Ü–µ—Å—Å—ã"
echo "============="

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."

# PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã
if command -v pm2 > /dev/null; then
    PM2_COUNT=$(timeout 3 pm2 jlist 2>/dev/null | jq length 2>/dev/null || echo "0")
    [ "$PM2_COUNT" -gt 0 ]; test_check $? "PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã ($PM2_COUNT)"
else
    warn "PM2 –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# Node –ø—Ä–æ—Ü–µ—Å—Å—ã
NODE_COUNT=$(ps aux | grep -E "node.*server" | grep -v grep | wc -l)
[ "$NODE_COUNT" -gt 0 ]; test_check $? "Node —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"

echo ""
echo "üåê 3. –°–µ—Ç–µ–≤—ã–µ –ø–æ—Ä—Ç—ã"
echo "=================="

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤..."
ss -tulpn 2>/dev/null | grep -q ":3001"; test_check $? "–ü–æ—Ä—Ç 3001 (API) –∑–∞–Ω—è—Ç"
ss -tulpn 2>/dev/null | grep -q ":3000"; test_check $? "–ü–æ—Ä—Ç 3000 (—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥) –∑–∞–Ω—è—Ç"

echo ""
echo "üîå 4. API —Ç–µ—Å—Ç—ã"
echo "=============="

info "–ë—ã—Å—Ç—Ä—ã–µ API —Ç–µ—Å—Ç—ã..."

# Health check
API_HEALTH=$(timeout 5 curl -s "http://localhost:3001/api/health" 2>/dev/null || echo "timeout")
echo "$API_HEALTH" | grep -q "OK"; test_check $? "API health check —Ä–∞–±–æ—Ç–∞–µ—Ç"

# Players API
API_PLAYERS=$(timeout 5 curl -s "http://localhost:3001/api/players" 2>/dev/null || echo "timeout")
echo "$API_PLAYERS" | grep -q "players"; test_check $? "API –∏–≥—Ä–æ–∫–æ–≤ –æ—Ç–≤–µ—á–∞–µ—Ç"

# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤
if echo "$API_PLAYERS" | jq .players > /dev/null 2>&1; then
    PLAYERS_COUNT=$(echo "$API_PLAYERS" | jq '.players | length' 2>/dev/null || echo "0")
    [ "$PLAYERS_COUNT" -gt 0 ]; test_check $? "–í –±–∞–∑–µ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏ ($PLAYERS_COUNT)"
fi

echo ""
echo "üåê 5. –§—Ä–æ–Ω—Ç–µ–Ω–¥"
echo "=============="

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."

# HTTP –æ—Ç–≤–µ—Ç
FRONTEND_HTTP=$(timeout 8 curl -s -o /dev/null -w "%{http_code}" "http://localhost:3000" 2>/dev/null || echo "timeout")
[ "$FRONTEND_HTTP" = "200" ]; test_check $? "–§—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP $FRONTEND_HTTP)"

echo ""
echo "üíæ 6. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
echo "================"

info "–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

[ -r "server/malabar.db" ]; test_check $? "–ë–î –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è"
[ -w "server/malabar.db" ]; test_check $? "–ë–î –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏"

DB_SIZE=$(stat -c%s "server/malabar.db" 2>/dev/null || echo "0")
[ "$DB_SIZE" -gt 1000 ]; test_check $? "–ë–î —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ ($DB_SIZE –±–∞–π—Ç)"

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "========================"

FAILED=$((TESTS - PASSED))
SUCCESS_RATE=$((PASSED * 100 / TESTS))

echo ""
echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  ‚Ä¢ –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TESTS"
echo -e "  ‚Ä¢ –ü—Ä–æ—à–ª–æ: ${GREEN}$PASSED${NC}"
echo -e "  ‚Ä¢ –ù–µ –ø—Ä–æ—à–ª–æ: ${RED}$FAILED${NC}"
echo "  ‚Ä¢ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $SUCCESS_RATE%"

echo ""
if [ $FAILED -eq 0 ]; then
    echo -e "${GREEN}üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò! –°–ò–°–¢–ï–ú–ê –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!${NC}"
    echo ""
    echo "üåê –°–∞–π—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é –≥–æ—Ç–æ–≤:"
    echo "  ‚Ä¢ http://$(hostname -I | awk '{print $1}'):3000"
    echo "  ‚Ä¢ http://46.173.17.229:3000"
    echo "  ‚Ä¢ http://vet-klinika-moscow.ru:3000"
    echo ""
    echo "‚úÖ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:"
    echo "  ‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö"
    echo "  ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    echo "  ‚Ä¢ Real-time –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    echo "  ‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
elif [ $FAILED -le 2 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ï–°–¢–¨ –ú–ï–õ–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´ ($FAILED —Ç–µ—Å—Ç–∞)${NC}"
    echo ""
    echo "üîß –°–∞–π—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ:"
    echo "1. –ü–æ–¥–æ–∂–¥–∏—Ç–µ 1-2 –º–∏–Ω—É—Ç—ã –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: tail -20 logs/*.log"
    echo "3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã"
elif [ $FAILED -le 4 ]; then
    echo -e "${YELLOW}üîß –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ê–°–¢–†–û–ô–ö–ê ($FAILED —Ç–µ—Å—Ç–æ–≤)${NC}"
    echo ""
    echo "üîß –î–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "1. –ï—Å–ª–∏ API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ./start-server-simple-vps.sh"
    echo "2. –ï—Å–ª–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: ./start-frontend-simple-vps.sh"
    echo "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ./install-critical-deps-vps.sh"
else
    echo -e "${RED}‚ùå –°–ï–†–¨–ï–ó–ù–´–ï –ü–†–û–ë–õ–ï–ú–´ ($FAILED —Ç–µ—Å—Ç–æ–≤)${NC}"
    echo ""
    echo "üÜò –ù—É–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ:"
    echo "1. –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞: ./diagnose-simple-vps.sh"
    echo "2. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞: ./step-by-step-restore-vps.sh"
fi

echo ""
echo "üìã –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –õ–æ–≥–∏ API: tail -f logs/server.log"
echo "  ‚Ä¢ –õ–æ–≥–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: tail -f logs/frontend.log"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: ps aux | grep node"
echo "  ‚Ä¢ –ü–æ—Ä—Ç—ã: ss -tulpn | grep :300"
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ API: ./start-server-simple-vps.sh"
echo "  ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: ./start-frontend-simple-vps.sh"

# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
exit $FAILED
