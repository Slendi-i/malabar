#!/bin/bash

echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–°–ï–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô"
echo "==============================="

# –§–ª–∞–≥–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
TESTS_PASSED=0
TESTS_FAILED=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_check() {
    local test_name="$1"
    local test_command="$2"
    local expected="$3"
    
    echo -n "üîç $test_name: "
    
    result=$(eval "$test_command" 2>/dev/null)
    
    if [[ $result == *"$expected"* ]]; then
        echo "‚úÖ PASSED"
        ((TESTS_PASSED++))
    else
        echo "‚ùå FAILED"
        echo "   Expected: $expected"
        echo "   Got: $result"
        ((TESTS_FAILED++))
    fi
}

echo "1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ê–ô–õ–û–í –ò –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "======================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
test_check "server.js —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" "[ -f server/server.js ] && echo 'exists'" "exists"
test_check "next.config.js –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω" "grep -q 'poweredByHeader: false' next.config.js && echo 'correct'" "correct"
test_check "ecosystem.config.js –æ–±–Ω–æ–≤–ª–µ–Ω" "grep -q 'restart_delay' ecosystem.config.js && echo 'updated'" "updated"
test_check "api.js —É–ª—É—á—à–µ–Ω" "grep -q 'getApiBaseUrl' config/api.js && echo 'improved'" "improved"

echo ""
echo "2Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–ù–¢–ê–ö–°–ò–°–ê JAVASCRIPT"
echo "====================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ server.js
if node -c server/server.js 2>/dev/null; then
    echo "‚úÖ server.js: –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
    ((TESTS_PASSED++))
else
    echo "‚ùå server.js: –û—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    ((TESTS_FAILED++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if node -e "require('./config/api.js')" 2>/dev/null; then
    echo "‚úÖ config/api.js: –ú–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
    ((TESTS_PASSED++))
else
    echo "‚ùå config/api.js: –û—à–∏–±–∫–∏ –º–æ–¥—É–ª—è"
    ((TESTS_FAILED++))
fi

echo ""
echo "3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ö–û–î–ê"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è lastUpdate
if ! grep -q "lastUpdate" server/server.js; then
    echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ lastUpdate: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è —É–¥–∞–ª–µ–Ω–∞"
    ((TESTS_PASSED++))
else
    echo "‚ùå –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ lastUpdate: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
    ((TESTS_FAILED++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
duplicate_routes=$(grep -c "app.get('/api/players/:id'" server/server.js || echo "0")
if [ "$duplicate_routes" = "1" ]; then
    echo "‚úÖ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ"
    ((TESTS_PASSED++))
else
    echo "‚ùå –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã: –ü—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è ($duplicate_routes –Ω–∞–π–¥–µ–Ω–æ)"
    ((TESTS_FAILED++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è output: export –≤ next.config.js
if ! grep -q "output.*export" next.config.js; then
    echo "‚úÖ Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: –ö–æ–Ω—Ñ–ª–∏–∫—Ç —É—Å—Ç—Ä–∞–Ω–µ–Ω"
    ((TESTS_PASSED++))
else
    echo "‚ùå Next.js –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: –ö–æ–Ω—Ñ–ª–∏–∫—Ç –æ—Å—Ç–∞–µ—Ç—Å—è"
    ((TESTS_FAILED++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ swcMinify —É–±—Ä–∞–Ω (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π –≤ Next.js 15+)
if ! grep -q "swcMinify.*true" next.config.js; then
    echo "‚úÖ Next.js swcMinify: –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä —É–±—Ä–∞–Ω"
    ((TESTS_PASSED++))
else
    echo "‚ùå Next.js swcMinify: –£—Å—Ç–∞—Ä–µ–≤—à–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –≤—Å–µ –µ—â–µ –µ—Å—Ç—å"
    ((TESTS_FAILED++))
fi

echo ""
echo "4Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"
echo "============================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å–µ—Ä–≤–µ—Ä–∞
if [ -d "server/node_modules" ]; then
    echo "‚úÖ Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    ((TESTS_PASSED++))
else
    echo "‚ö†Ô∏è Backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –¢—Ä–µ–±—É–µ—Ç—Å—è npm install –≤ server/"
    ((TESTS_FAILED++))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
if [ -d "node_modules" ]; then
    echo "‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    ((TESTS_PASSED++))
else
    echo "‚ö†Ô∏è Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –¢—Ä–µ–±—É–µ—Ç—Å—è npm install"
    ((TESTS_FAILED++))
fi

echo ""
echo "5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–ê–ë–û–¢–û–°–ü–û–°–û–ë–ù–û–°–¢–ò (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ)"
echo "=============================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
if curl -s --connect-timeout 3 http://localhost:3001/api/health >/dev/null 2>&1; then
    test_check "Backend Health API" "curl -s http://localhost:3001/api/health" "OK"
    test_check "Backend Players API" "curl -s http://localhost:3001/api/players | head -1" "["
else
    echo "‚ö†Ô∏è Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω - —Ç–µ—Å—Ç—ã API –ø—Ä–æ–ø—É—â–µ–Ω—ã"
    ((TESTS_FAILED += 2))
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
frontend_status=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 3 http://localhost:3000 2>/dev/null || echo "000")
if [ "$frontend_status" = "200" ]; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $frontend_status)"
    ((TESTS_PASSED++))
else
    echo "‚ö†Ô∏è Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $frontend_status)"
    ((TESTS_FAILED++))
fi

echo ""
echo "6Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï PM2 –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò"
echo "==============================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PM2 —Å—Ç–∞—Ç—É—Å–∞
if command -v pm2 >/dev/null 2>&1; then
    if pm2 list | grep -q "malabar"; then
        backend_status=$(pm2 list | grep "malabar-backend" | grep -o "online\|stopped\|errored" || echo "not_found")
        frontend_status=$(pm2 list | grep "malabar-frontend" | grep -o "online\|stopped\|errored" || echo "not_found")
        
        if [ "$backend_status" = "online" ]; then
            echo "‚úÖ PM2 Backend: –†–∞–±–æ—Ç–∞–µ—Ç"
            ((TESTS_PASSED++))
        else
            echo "‚ö†Ô∏è PM2 Backend: $backend_status"
            ((TESTS_FAILED++))
        fi
        
        if [ "$frontend_status" = "online" ]; then
            echo "‚úÖ PM2 Frontend: –†–∞–±–æ—Ç–∞–µ—Ç"
            ((TESTS_PASSED++))
        else
            echo "‚ö†Ô∏è PM2 Frontend: $frontend_status"
            ((TESTS_FAILED++))
        fi
    else
        echo "‚ö†Ô∏è PM2: –ü—Ä–æ—Ü–µ—Å—Å—ã malabar –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        ((TESTS_FAILED += 2))
    fi
else
    echo "‚ö†Ô∏è PM2: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    ((TESTS_FAILED += 2))
fi

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø"
echo "========================="
echo "‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã: $TESTS_PASSED"
echo "‚ùå –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã: $TESTS_FAILED"

if [ $TESTS_FAILED -eq 0 ]; then
    echo ""
    echo "üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´! –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!"
    echo ""
    echo "üöÄ –ì–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ:"
    echo "   - –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    echo "   - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞" 
    echo "   - –ö–æ–¥ –ø—Ä–æ–≤–µ—Ä–µ–Ω –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å"
    echo "   - –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã"
    echo ""
    echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å:"
    echo "   http://localhost:3000"
    echo "   http://46.173.17.229:3000"
    echo "   http://vet-klinika-moscow.ru"
    
elif [ $TESTS_FAILED -le 3 ]; then
    echo ""
    echo "‚ö†Ô∏è –ë–û–õ–¨–®–ò–ù–°–¢–í–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –†–ê–ë–û–¢–ê–Æ–¢"
    echo "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä)"
    echo ""
    echo "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./stable-deploy.sh"
    echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: ./stable-diagnose.sh"
    
else
    echo ""
    echo "‚ùå –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –†–ê–ë–û–¢–ê"
    echo "–ù–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    echo ""
    echo "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: npm install"
    echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ: ./stable-deploy.sh"
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs"
fi

echo ""
echo "üîß –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   ./stable-deploy.sh      # –ü–æ–ª–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
echo "   ./stable-diagnose.sh    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞"
echo "   ./quick-restore.sh      # –ë—ã—Å—Ç—Ä–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ"
echo "   pm2 status              # –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
