#!/bin/bash

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø—Ä–æ–±–ª–µ–º

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –û–°–¢–ê–í–®–ò–•–°–Ø –ü–†–û–ë–õ–ï–ú"
echo "======================================"

# 1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï NGINX 500 –û–®–ò–ë–ö–ò
echo "üåê 1. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï NGINX 500 –û–®–ò–ë–ö–ò..."
echo "------------------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx
echo "üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ nginx..."
echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ nginx:"
sudo tail -20 /var/log/nginx/error.log | grep -E "(error|crit|alert|emerg)" || echo "–ù–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è IP
echo ""
echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx –¥–ª—è IP..."
if [ -f "/etc/nginx/sites-enabled/malabar-ip" ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è malabar-ip –Ω–∞–π–¥–µ–Ω–∞"
    sudo nginx -t
    if [ $? -ne 0 ]; then
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx"
        sudo nginx -t 2>&1
    fi
else
    echo "‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è malabar-ip –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx
    sudo cat > /etc/nginx/sites-available/malabar-ip << 'EOF'
server {
    listen 80;
    server_name 46.173.17.229;
    
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    access_log /var/log/nginx/malabar-ip-access.log;
    error_log /var/log/nginx/malabar-ip-error.log;
    
    # Frontend
    location / {
        proxy_pass http://127.0.0.1:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # –¢–∞–π–º–∞—É—Ç—ã
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Backend API
    location /api/ {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
    }
    
    # WebSocket
    location /ws {
        proxy_pass http://127.0.0.1:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        proxy_buffering off;
        proxy_read_timeout 86400;
    }
}
EOF
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    sudo ln -sf /etc/nginx/sites-available/malabar-ip /etc/nginx/sites-enabled/
    sudo nginx -t && sudo systemctl reload nginx
    echo "‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
fi

# 2. –ü–†–û–í–ï–†–ö–ê –ü–†–û–¶–ï–°–°–û–í
echo ""
echo "üöÄ 2. –ü–†–û–í–ï–†–ö–ê –ü–†–û–¶–ï–°–°–û–í..."
echo "---------------------------"
pm2 status

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –æ—Ç–≤–µ—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ
echo ""
echo "üîç –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É:"
if curl -s --connect-timeout 5 http://localhost:3000 > /dev/null; then
    echo "‚úÖ Frontend –æ—Ç–≤–µ—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 3000"
else
    echo "‚ùå Frontend –ù–ï –æ—Ç–≤–µ—á–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—É 3000"
    echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
    pm2 restart malabar-frontend
    sleep 3
fi

# –¢–µ—Å—Ç backend
echo ""
echo "üîç –¢–µ—Å—Ç backend:"
curl -s http://localhost:3001/api/health || echo "‚ùå Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"

# 3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø –î–ê–ù–ù–´–• –ü–†–û–§–ò–õ–ï–ô
echo ""
echo "üíæ 3. –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –°–û–•–†–ê–ù–ï–ù–ò–Ø –î–ê–ù–ù–´–• –ü–†–û–§–ò–õ–ï–ô..."
echo "---------------------------------------------"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints..."
curl -s http://localhost:3001/api/players | head -200 | tail -1

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ API –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π
cd server
echo "üîß –î–æ–±–∞–≤–ª–µ–Ω–∏–µ endpoints –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π..."

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ API endpoints –≤ –∫–æ–Ω–µ—Ü server.js
cat >> server.js << 'EOF'

// Update individual player by ID (–¥–ª—è –ø—Ä–æ—Ñ–∏–ª–µ–π)
app.put('/api/players/:id', (req, res) => {
  const playerId = parseInt(req.params.id);
  const updatedPlayer = req.body;
  
  console.log(`Updating player ${playerId}:`, updatedPlayer);
  
  db.get('SELECT * FROM players WHERE id = ?', [playerId], (err, player) => {
    if (err) {
      console.error('Database error:', err);
      return res.status(500).json({ error: 'Database error' });
    }
    
    if (!player) {
      return res.status(404).json({ error: 'Player not found' });
    }
    
    const sql = `
      UPDATE players 
      SET name = ?, avatar = ?, socialLinks = ?, stats = ?, games = ?, isOnline = ?, position = ?
      WHERE id = ?
    `;
    
    const params = [
      updatedPlayer.name || player.name,
      updatedPlayer.avatar || player.avatar,
      JSON.stringify(updatedPlayer.socialLinks || JSON.parse(player.socialLinks || '{}')),
      JSON.stringify(updatedPlayer.stats || JSON.parse(player.stats || '{}')),
      JSON.stringify(updatedPlayer.games || JSON.parse(player.games || '[]')),
      updatedPlayer.isOnline !== undefined ? (updatedPlayer.isOnline ? 1 : 0) : player.isOnline,
      updatedPlayer.position || player.position,
      playerId
    ];
    
    db.run(sql, params, function(err) {
      if (err) {
        console.error('Update error:', err);
        return res.status(500).json({ error: 'Update failed' });
      }
      
      console.log(`Player ${playerId} updated successfully`);
      res.json({ message: 'Player updated successfully', id: playerId });
    });
  });
});

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–≥—Ä
app.post('/api/players/:id/games', (req, res) => {
  const playerId = parseInt(req.params.id);
  const games = req.body.games;
  
  console.log(`Updating games for player ${playerId}:`, games);
  
  const sql = 'UPDATE players SET games = ? WHERE id = ?';
  db.run(sql, [JSON.stringify(games), playerId], function(err) {
    if (err) {
      console.error('Games update error:', err);
      return res.status(500).json({ error: 'Games update failed' });
    }
    
    console.log(`Games updated for player ${playerId}`);
    res.json({ message: 'Games updated successfully', id: playerId });
  });
});

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç–µ–π
app.post('/api/players/:id/social', (req, res) => {
  const playerId = parseInt(req.params.id);
  const socialLinks = req.body.socialLinks;
  
  console.log(`Updating social links for player ${playerId}:`, socialLinks);
  
  const sql = 'UPDATE players SET socialLinks = ? WHERE id = ?';
  db.run(sql, [JSON.stringify(socialLinks), playerId], function(err) {
    if (err) {
      console.error('Social links update error:', err);
      return res.status(500).json({ error: 'Social links update failed' });
    }
    
    console.log(`Social links updated for player ${playerId}`);
    res.json({ message: 'Social links updated successfully', id: playerId });
  });
});
EOF

cd ..

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend —Å –Ω–æ–≤—ã–º–∏ endpoints
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ backend —Å –Ω–æ–≤—ã–º–∏ endpoints..."
pm2 restart malabar-backend

# 4. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê
echo ""
echo "üèÅ 4. –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê..."
echo "--------------------------"
sleep 5

echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
pm2 status

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"
echo "1. –î–æ–º–µ–Ω: http://vet-klinika-moscow.ru"
if curl -s --connect-timeout 10 http://vet-klinika-moscow.ru > /dev/null; then
    echo "   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo "2. IP –∞–¥—Ä–µ—Å: http://46.173.17.229:3000"
if curl -s --connect-timeout 10 http://46.173.17.229:3000 > /dev/null; then
    echo "   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: sudo tail -f /var/log/nginx/malabar-ip-error.log"
fi

echo "3. Backend API: http://46.173.17.229:3001/api/health"
if curl -s --connect-timeout 10 http://46.173.17.229:3001/api/health > /dev/null; then
    echo "   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
echo "üìã –õ–û–ì–ò –î–õ–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:"
echo "Nginx –æ—à–∏–±–∫–∏: sudo tail -f /var/log/nginx/malabar-ip-error.log"
echo "PM2 –ª–æ–≥–∏: pm2 logs"
echo "Backend –ª–æ–≥–∏: pm2 logs malabar-backend"

echo ""
echo "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù–´!"
echo "–¢–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å frontend –∫–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è."
