#!/usr/bin/env node

/**
 * üöÄ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø SSR –û–®–ò–ë–ö–ò V2
 * 
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ API –≤—ã–∑–æ–≤—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
 */

console.log('üß™ –¢–ï–°–¢: –ü—Ä–æ–≤–µ—Ä–∫–∞ SSR –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è V2');
console.log('===================================');

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ fetch –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Node.js
console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ fetch...');
try {
  if (typeof fetch === 'undefined') {
    console.log('‚ùå fetch –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Node.js (–æ–∂–∏–¥–∞–µ–º–æ)');
    console.log('‚úÖ –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å node-fetch –∏–ª–∏ –¥—Ä—É–≥—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É');
  } else {
    console.log('‚úÖ fetch –¥–æ—Å—Ç—É–ø–µ–Ω –≤ Node.js');
  }
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ fetch:', error.message);
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–æ–¥ –Ω–µ –ø–∞–¥–∞–µ—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª–µ–π
console.log('\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π...');

try {
  // –¢–µ—Å—Ç apiService
  const apiService = require('./services/apiService.js').default;
  console.log('‚úÖ apiService –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –¢–µ—Å—Ç usePeriodicSync
  const usePeriodicSync = require('./services/usePeriodicSync.js');
  console.log('‚úÖ usePeriodicSync –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  // –¢–µ—Å—Ç useRealTimeSync
  const useRealTimeSync = require('./services/useRealTimeSync.js');
  console.log('‚úÖ useRealTimeSync –∑–∞–≥—Ä—É–∂–µ–Ω');
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª–µ–π:', error.message);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ API –≤—ã–∑–æ–≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –æ—à–∏–±–∫–∏
console.log('\n3. –¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API...');

try {
  const apiService = require('./services/apiService.js').default;
  
  // –ü—ã—Ç–∞–µ–º—Å—è –≤—ã–∑–≤–∞—Ç—å API –º–µ—Ç–æ–¥ (–¥–æ–ª–∂–µ–Ω —É–ø–∞—Å—Ç—å —Å fetch error)
  apiService.getPlayers().then(() => {
    console.log('‚ùå API –≤—ã–∑–æ–≤ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è');
  }).catch(error => {
    if (error.message.includes('Failed to fetch') || error.message.includes('fetch is not defined')) {
      console.log('‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û: API –≤—ã–∑–æ–≤ —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π fetch (–æ–∂–∏–¥–∞–µ–º–æ –≤ Node.js)');
    } else {
      console.log('‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê:', error.message);
    }
  });
  
} catch (error) {
  console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ API:', error.message);
}

console.log('\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–Å–ù');
console.log('üìù –ï—Å–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ, SSR –æ—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!');
console.log('üìù API –≤—ã–∑–æ–≤—ã —Ç–µ–ø–µ—Ä—å –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ —á–µ—Ä–µ–∑ useEffect');
