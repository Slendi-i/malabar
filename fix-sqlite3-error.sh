#!/bin/bash

echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–®–ò–ë–ö–ò SQLITE3"
echo "============================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "package.json" ] || [ ! -f "server/server.js" ]; then
    echo "‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è. –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ /var/www/malabar"
    exit 1
fi

echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo "üñ•Ô∏è –°–∏—Å—Ç–µ–º–∞: $(uname -a)"
echo "üì¶ Node.js: $(node --version)"
echo "üì¶ npm: $(npm --version)"

# 1. –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo ""
echo "1Ô∏è‚É£ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–†–û–¶–ï–°–°–û–í"
echo "=========================="

pm2 stop all 2>/dev/null || true
pm2 delete all 2>/dev/null || true
pm2 kill 2>/dev/null || true

sudo fuser -k 3000/tcp 2>/dev/null || true
sudo fuser -k 3001/tcp 2>/dev/null || true
sudo pkill -f "node.*server.js" 2>/dev/null || true
sudo pkill -f "npm.*start" 2>/dev/null || true

sleep 3
echo "‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 2. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ node_modules
echo ""
echo "2Ô∏è‚É£ –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"
echo "============================="

echo "–£–¥–∞–ª–µ–Ω–∏–µ node_modules frontend..."
rm -rf node_modules package-lock.json 2>/dev/null || true

echo "–£–¥–∞–ª–µ–Ω–∏–µ node_modules backend..."
rm -rf server/node_modules server/package-lock.json 2>/dev/null || true

echo "–û—á–∏—Å—Ç–∫–∞ npm cache..."
npm cache clean --force

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—á–∏—â–µ–Ω—ã"

# 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏
echo ""
echo "3Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ò–°–¢–ï–ú–ù–´–• –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"
echo "================================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ build-essential
if ! dpkg -l | grep -q build-essential; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ build-essential..."
    sudo apt-get update
    sudo apt-get install -y build-essential
else
    echo "‚úÖ build-essential —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ python3
if ! command -v python3 &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ python3..."
    sudo apt-get install -y python3
else
    echo "‚úÖ python3 –¥–æ—Å—Ç—É–ø–µ–Ω: $(python3 --version)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ make
if ! command -v make &> /dev/null; then
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ make..."
    sudo apt-get install -y make
else
    echo "‚úÖ make –¥–æ—Å—Ç—É–ø–µ–Ω: $(make --version | head -1)"
fi

# 4. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo ""
echo "4Ô∏è‚É£ –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê BACKEND –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"
echo "===================================="

cd server

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ package.json..."
if [ ! -f "package.json" ]; then
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ server/"
    exit 1
fi

echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend —Å –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π..."
npm install --build-from-source

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ sqlite3 —É—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ sqlite3..."
if node -e "require('sqlite3')" 2>/dev/null; then
    echo "‚úÖ sqlite3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ùå sqlite3 –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3
    npm uninstall sqlite3
    npm install sqlite3 --build-from-source --sqlite=/usr/local
    
    if node -e "require('sqlite3')" 2>/dev/null; then
        echo "‚úÖ sqlite3 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏"
    else
        echo "‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ sqlite3"
        exit 1
    fi
fi

cd ..

# 5. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π  
echo ""
echo "5Ô∏è‚É£ –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê FRONTEND –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô"
echo "====================================="

echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend..."
npm install

echo "‚úÖ Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

# 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ backend
echo ""
echo "6Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï BACKEND"
echo "====================="

cd server

echo "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ backend..."
timeout 10s node server.js &
BACKEND_PID=$!

sleep 6

echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
if curl -s --connect-timeout 5 http://localhost:3001/api/health >/dev/null 2>&1; then
    echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ players API
    if curl -s --connect-timeout 5 http://localhost:3001/api/players >/dev/null 2>&1; then
        echo "‚úÖ Players API —Ä–∞–±–æ—Ç–∞–µ—Ç!"
        BACKEND_OK=true
    else
        echo "‚ùå Players API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        BACKEND_OK=false
    fi
else
    echo "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    BACKEND_OK=false
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ backend
kill $BACKEND_PID 2>/dev/null || true
killall node 2>/dev/null || true
sleep 2

cd ..

if [ "$BACKEND_OK" != "true" ]; then
    echo "‚ùå Backend –Ω–µ –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "–ü—Ä–æ–≤–µ—Ä–∏–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:"
    cd server
    echo "–ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
    timeout 5s node server.js || echo "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ backend"
    cd ..
    exit 1
fi

# 7. –°–±–æ—Ä–∫–∞ frontend
echo ""
echo "7Ô∏è‚É£ –°–ë–û–†–ö–ê FRONTEND"
echo "=================="

echo "–°–±–æ—Ä–∫–∞ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
npm run build

if [ $? -eq 0 ]; then
    echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend"
    exit 1
fi

# 8. –§–∏–Ω–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PM2
echo ""
echo "8Ô∏è‚É£ –ó–ê–ü–£–°–ö –ß–ï–†–ï–ó PM2"
echo "=================="

echo "–ó–∞–ø—É—Å–∫ backend..."
pm2 start server/server.js --name "malabar-backend"

sleep 8

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend
if pm2 list | grep -q "online.*malabar-backend"; then
    echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ PM2"
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API
    sleep 3
    if curl -s --connect-timeout 5 http://localhost:3001/api/health >/dev/null 2>&1; then
        echo "‚úÖ Backend API —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ PM2"
    else
        echo "‚ùå Backend API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç —á–µ—Ä–µ–∑ PM2"
        pm2 logs malabar-backend --lines 10
    fi
else
    echo "‚ùå Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —á–µ—Ä–µ–∑ PM2"
    pm2 logs malabar-backend --lines 15
    exit 1
fi

echo "–ó–∞–ø—É—Å–∫ frontend..."
pm2 start npm --name "malabar-frontend" -- start

sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
if pm2 list | grep -q "online.*malabar-frontend"; then
    echo "‚úÖ Frontend –∑–∞–ø—É—â–µ–Ω —á–µ—Ä–µ–∑ PM2"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP
    sleep 5
    FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 8 http://localhost:3000 2>/dev/null || echo "000")
    if [ "$FRONTEND_STATUS" = "200" ]; then
        echo "‚úÖ Frontend –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $FRONTEND_STATUS)"
    else
        echo "‚ö†Ô∏è Frontend –∑–∞–ø—É—â–µ–Ω –Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç (–∫–æ–¥: $FRONTEND_STATUS)"
    fi
else
    echo "‚ùå Frontend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è —á–µ—Ä–µ–∑ PM2"
    pm2 logs malabar-frontend --lines 15
fi

# 9. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "9Ô∏è‚É£ –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê"
echo "===================="

echo "PM2 —Å—Ç–∞—Ç—É—Å:"
pm2 status

echo ""
echo "API –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo -n "Backend Health: "
curl -s --connect-timeout 5 http://localhost:3001/api/health >/dev/null 2>&1 && echo "‚úÖ" || echo "‚ùå"

echo -n "Backend Players: "  
curl -s --connect-timeout 5 http://localhost:3001/api/players >/dev/null 2>&1 && echo "‚úÖ" || echo "‚ùå"

echo -n "Frontend: "
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 http://localhost:3000 2>/dev/null || echo "000")
[ "$FRONTEND_STATUS" = "200" ] && echo "‚úÖ ($FRONTEND_STATUS)" || echo "‚ùå ($FRONTEND_STATUS)"

echo ""
echo "üéâ SQLITE3 –û–®–ò–ë–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ê!"
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç:"
echo "   http://46.173.17.229:3000"
echo "   http://vet-klinika-moscow.ru"
echo ""
echo "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   pm2 status     - —Å—Ç–∞—Ç—É—Å"
echo "   pm2 logs       - –ª–æ–≥–∏"
echo "   pm2 restart all - –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
