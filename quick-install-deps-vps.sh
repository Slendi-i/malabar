#!/bin/bash

# –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–ª—å–∫–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π (–±–µ–∑ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤)
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å node_modules

echo "üì¶ –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
echo "==================================="

# –¶–≤–µ—Ç–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[OK]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü–µ—Ä–µ—Ö–æ–¥ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /var/www/malabar || {
    error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /var/www/malabar –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    exit 1
}

echo "üìç –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

echo ""
echo "üßπ 1. –û—á–∏—Å—Ç–∫–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
echo "==============================="

info "–£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ node_modules..."
rm -rf node_modules server/node_modules 2>/dev/null && log "–°—Ç–∞—Ä—ã–µ node_modules —É–¥–∞–ª–µ–Ω—ã"

info "–û—á–∏—â–∞–µ–º npm cache..."
npm cache clean --force 2>/dev/null && log "npm cache –æ—á–∏—â–µ–Ω"

info "–û—á–∏—â–∞–µ–º package-lock..."
rm -f package-lock.json server/package-lock.json 2>/dev/null && log "package-lock —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã"

echo ""
echo "üì¶ 2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
echo "======================================"

if [ -f "package.json" ]; then
    info "–ó–∞–ø—É—Å–∫–∞–µ–º npm install –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º –∏ –±–µ–∑ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    timeout 600 npm install --no-optional --no-audit --prefer-offline --progress=false 2>/dev/null
    INSTALL_RESULT=$?
    
    if [ $INSTALL_RESULT -eq 0 ]; then
        log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    elif [ $INSTALL_RESULT -eq 124 ]; then
        warn "‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç (10 –º–∏–Ω—É—Ç)"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ö–æ—Ç—è –±—ã —á–∞—Å—Ç–∏—á–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å
        if [ -d "node_modules" ] && [ "$(ls node_modules | wc -l)" -gt 10 ]; then
            log "üì¶ –ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        else
            error "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        fi
    else
        error "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -d "node_modules" ]; then
        MODULES_COUNT=$(ls node_modules 2>/dev/null | wc -l)
        log "node_modules —Å–æ–¥–µ—Ä–∂–∏—Ç $MODULES_COUNT –º–æ–¥—É–ª–µ–π"
    else
        error "node_modules –Ω–µ —Å–æ–∑–¥–∞–Ω–∞!"
    fi
else
    error "package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

echo ""
echo "üì¶ 3. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞"
echo "==================================="

if [ -f "server/package.json" ]; then
    info "–ó–∞–ø—É—Å–∫–∞–µ–º npm install –¥–ª—è –±—ç–∫–µ–Ω–¥–∞..."
    
    cd server
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    timeout 300 npm install --no-optional --no-audit --prefer-offline --progress=false 2>/dev/null
    INSTALL_RESULT=$?
    
    if [ $INSTALL_RESULT -eq 0 ]; then
        log "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –±—ç–∫–µ–Ω–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    elif [ $INSTALL_RESULT -eq 124 ]; then
        warn "‚è∞ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–≤—ã—Å–∏–ª–∞ —Ç–∞–π–º–∞—É—Ç (5 –º–∏–Ω—É—Ç)"
        if [ -d "node_modules" ] && [ "$(ls node_modules | wc -l)" -gt 5 ]; then
            log "üì¶ –ß–∞—Å—Ç–∏—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞"
        else
            error "‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
        fi
    else
        error "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if [ -d "node_modules" ]; then
        MODULES_COUNT=$(ls node_modules 2>/dev/null | wc -l)
        log "server/node_modules —Å–æ–¥–µ—Ä–∂–∏—Ç $MODULES_COUNT –º–æ–¥—É–ª–µ–π"
    else
        error "server/node_modules –Ω–µ —Å–æ–∑–¥–∞–Ω–∞!"
    fi
    
    cd ..
else
    error "server/package.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
fi

echo ""
echo "üîç 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
echo "======================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
FRONTEND_CRITICAL_MODULES=("react" "next" "@mui/material")
for module in "${FRONTEND_CRITICAL_MODULES[@]}"; do
    if [ -d "node_modules/$module" ]; then
        log "$module ‚úì"
    else
        error "$module –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    fi
done

info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –º–æ–¥—É–ª–∏ –±—ç–∫–µ–Ω–¥–∞..."
BACKEND_CRITICAL_MODULES=("express" "sqlite3" "ws" "cors")
for module in "${BACKEND_CRITICAL_MODULES[@]}"; do
    if [ -d "server/node_modules/$module" ]; then
        log "$module ‚úì"
    else
        error "$module –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    fi
done

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –£–°–¢–ê–ù–û–í–ö–ò"
echo "====================="

FRONTEND_MODULES=$(ls node_modules 2>/dev/null | wc -l)
BACKEND_MODULES=$(ls server/node_modules 2>/dev/null | wc -l)

echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π:"
echo "  ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: $FRONTEND_MODULES"
echo "  ‚Ä¢ –ë—ç–∫–µ–Ω–¥: $BACKEND_MODULES"

# –†–∞–∑–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏
if command -v du > /dev/null; then
    FRONTEND_SIZE=$(du -sh node_modules 2>/dev/null | cut -f1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    BACKEND_SIZE=$(du -sh server/node_modules 2>/dev/null | cut -f1 || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    echo ""
    echo "üíæ –†–∞–∑–º–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
    echo "  ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: $FRONTEND_SIZE"
    echo "  ‚Ä¢ –ë—ç–∫–µ–Ω–¥: $BACKEND_SIZE"
fi

echo ""
echo "üìä –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
df -h . | head -2

echo ""
if [ "$FRONTEND_MODULES" -gt 50 ] && [ "$BACKEND_MODULES" -gt 10 ]; then
    echo -e "${GREEN}‚úÖ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!${NC}"
    echo ""
    echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "  1. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤: ./restore-after-cleanup-vps.sh"
    echo "  2. –ò–ª–∏ —Ç–æ–ª—å–∫–æ —Å–±–æ—Ä–∫–∞: npm run build"
    echo "  3. –ü—Ä–æ–≤–µ—Ä–∫–∞: ./diagnose-after-cleanup-vps.sh"
elif [ "$FRONTEND_MODULES" -gt 10 ] || [ "$BACKEND_MODULES" -gt 5 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê${NC}"
    echo ""
    echo "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:"
    echo "  1. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑: ./quick-install-deps-vps.sh"
    echo "  2. –ò–ª–∏ –ø–æ–ª–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./emergency-restore-vps.sh"
    echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: df -h"
else
    echo -e "${RED}‚ùå –£–°–¢–ê–ù–û–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨${NC}"
    echo ""
    echo "üÜò –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "  ‚Ä¢ –ù–µ–¥–æ—Å—Ç–∞—Ç–æ–∫ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ"
    echo "  ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º"
    echo "  ‚Ä¢ –ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–µ package.json —Ñ–∞–π–ª—ã"
    echo ""
    echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
    echo "  1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Å—Ç–æ: df -h"
    echo "  2. –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: ./emergency-restore-vps.sh"
fi

echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π: ls node_modules | wc -l"
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä: du -sh node_modules server/node_modules"
echo "  ‚Ä¢ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞: rm -rf node_modules && npm install"
