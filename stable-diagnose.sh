#!/bin/bash

echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò MALABAR"
echo "=================================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã
echo "üìã –°–ò–°–¢–ï–ú–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø:"
echo "Node.js: $(node --version 2>/dev/null || echo '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
echo "npm: $(npm --version 2>/dev/null || echo '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
echo "PM2: $(pm2 --version 2>/dev/null || echo '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo "üì° –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í:"
echo "–ü–æ—Ä—Ç 3000: $(lsof -ti:3000 >/dev/null && echo 'üî¥ –ó–∞–Ω—è—Ç' || echo 'üü¢ –°–≤–æ–±–æ–¥–µ–Ω')"
echo "–ü–æ—Ä—Ç 3001: $(lsof -ti:3001 >/dev/null && echo 'üî¥ –ó–∞–Ω—è—Ç' || echo 'üü¢ –°–≤–æ–±–æ–¥–µ–Ω')"
echo ""

# –°—Ç–∞—Ç—É—Å PM2
echo "üöÄ PM2 –°–¢–ê–¢–£–°:"
pm2 status 2>/dev/null || echo "‚ùå PM2 –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo "üìÅ –ü–†–û–í–ï–†–ö–ê –§–ê–ô–õ–û–í:"
echo "server.js: $([ -f server/server.js ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω' || echo '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
echo "package.json (root): $([ -f package.json ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω' || echo '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
echo "package.json (server): $([ -f server/package.json ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω' || echo '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
echo "next.config.js: $([ -f next.config.js ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω' || echo '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
echo "ecosystem.config.js: $([ -f ecosystem.config.js ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω' || echo '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')"
echo "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $([ -f server/malabar.db ] && echo '‚úÖ –ù–∞–π–¥–µ–Ω–∞' || echo '‚ö†Ô∏è –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞')"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ node_modules
echo "üì¶ –ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô:"
echo "node_modules (root): $([ -d node_modules ] && echo '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã' || echo '‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è npm install')"
echo "node_modules (server): $([ -d server/node_modules ] && echo '‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã' || echo '‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è npm install')"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "üìù –õ–û–ì–ò:"
if [ -d logs ]; then
    echo "–ü–∞–ø–∫–∞ logs: ‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç"
    for log in backend-error.log backend-out.log frontend-error.log frontend-out.log; do
        if [ -f "logs/$log" ]; then
            size=$(du -h "logs/$log" | cut -f1)
            echo "  $log: ‚úÖ ($size)"
        else
            echo "  $log: ‚ö™ –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω"
        fi
    done
else
    echo "–ü–∞–ø–∫–∞ logs: ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞)"
fi
echo ""

# –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
echo "üåê –¢–ï–°–¢ –î–û–°–¢–£–ü–ù–û–°–¢–ò:"

# Backend health
BACKEND_HEALTH=$(curl -s --connect-timeout 3 http://localhost:3001/api/health 2>/dev/null || echo "failed")
if [[ $BACKEND_HEALTH == *"OK"* ]]; then
    echo "Backend Health: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "Backend Health: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# Backend players
PLAYERS_API=$(curl -s --connect-timeout 3 http://localhost:3001/api/players 2>/dev/null || echo "failed")
if [[ $PLAYERS_API == *"["* ]]; then
    echo "Players API: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "Players API: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# Frontend
FRONTEND_STATUS=$(curl -s --connect-timeout 3 -o /dev/null -w "%{http_code}" http://localhost:3000 2>/dev/null || echo "000")
if [ "$FRONTEND_STATUS" = "200" ]; then
    echo "Frontend: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç (–∫–æ–¥: $FRONTEND_STATUS)"
else
    echo "Frontend: ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–∫–æ–¥: $FRONTEND_STATUS)"
fi

echo ""

# –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏
echo "üö® –ü–û–°–õ–ï–î–ù–ò–ï –û–®–ò–ë–ö–ò (–µ—Å–ª–∏ –µ—Å—Ç—å):"
if [ -f logs/backend-error.log ]; then
    echo "Backend errors (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
    tail -5 logs/backend-error.log 2>/dev/null || echo "  –ù–µ—Ç –æ—à–∏–±–æ–∫"
else
    echo "Backend errors: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

if [ -f logs/frontend-error.log ]; then
    echo "Frontend errors (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å—Ç—Ä–æ–∫):"
    tail -5 logs/frontend-error.log 2>/dev/null || echo "  –ù–µ—Ç –æ—à–∏–±–æ–∫"
else
    echo "Frontend errors: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã
BACKEND_RUNNING=$(pm2 list 2>/dev/null | grep "malabar-backend" | grep -c "online" || echo "0")
FRONTEND_RUNNING=$(pm2 list 2>/dev/null | grep "malabar-frontend" | grep -c "online" || echo "0")

if [ "$BACKEND_RUNNING" = "0" ] && [ "$FRONTEND_RUNNING" = "0" ]; then
    echo "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./stable-deploy.sh"
elif [ "$BACKEND_RUNNING" = "0" ]; then
    echo "‚ùå Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 start ecosystem.config.js --only malabar-backend"
elif [ "$FRONTEND_RUNNING" = "0" ]; then
    echo "‚ùå Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 start ecosystem.config.js --only malabar-frontend"
else
    echo "‚úÖ –û–±–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -d node_modules ] || [ ! -d server/node_modules ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install && cd server && npm install && cd .."
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
if [[ $BACKEND_HEALTH != *"OK"* ]] || [[ $PLAYERS_API != *"["* ]]; then
    echo "üîß Backend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs malabar-backend"
fi

if [ "$FRONTEND_STATUS" != "200" ]; then
    echo "üîß Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs malabar-frontend"
fi

echo ""
echo "üîÑ –ë–´–°–¢–†–´–ï –ö–û–ú–ê–ù–î–´:"
echo "–ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞: ./stable-deploy.sh"
echo "–ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: pm2 logs"
echo "–°—Ç–∞—Ç—É—Å PM2: pm2 status"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart all"
