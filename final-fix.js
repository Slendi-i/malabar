#!/usr/bin/env node

/**
 * üî• –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç
 */

const API_BASE = 'http://localhost:3001';

async function finalFix() {
  console.log('üî• –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï HTTP 404');
  console.log('=================================');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
    console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${API_BASE}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: ${healthResponse.status}`);
    }
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...');
    const playersResponse = await fetch(`${API_BASE}/api/players`);
    const playersData = await playersResponse.json();
    const players = playersData.players;
    
    if (players.length === 0) {
      throw new Error('–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
    const testPlayer = players[0];
    console.log(`üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞ ${testPlayer.id}: ${testPlayer.name}`);
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º PATCH endpoint
    console.log('\n3. –¢–µ—Å—Ç PATCH /api/coordinates/:id...');
    const testX = 123;
    const testY = 456;
    
    console.log(`üì§ PATCH ${API_BASE}/api/coordinates/${testPlayer.id}`);
    console.log(`üì§ –î–∞–Ω–Ω—ã–µ: {x: ${testX}, y: ${testY}}`);
    
    const patchResponse = await fetch(`${API_BASE}/api/coordinates/${testPlayer.id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        x: testX,
        y: testY
      })
    });
    
    console.log(`üìä PATCH —Å—Ç–∞—Ç—É—Å: ${patchResponse.status}`);
    
    if (patchResponse.status === 404) {
      console.log('‚ùå HTTP 404 - endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      console.log('\nüí° –†–ï–®–ï–ù–ò–Ø:');
      console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: cd server && node server.js');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ –∑–∞–ø—É—Å–∫–∞');
      console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ endpoint –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ server.js');
      return;
    }
    
    if (!patchResponse.ok) {
      const errorText = await patchResponse.text();
      console.log(`‚ùå PATCH –æ—à–∏–±–∫–∞: ${patchResponse.status} - ${errorText}`);
      return;
    }
    
    const patchData = await patchResponse.json();
    console.log(`‚úÖ PATCH —É—Å–ø–µ—à–µ–Ω!`, patchData);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...');
    const checkResponse = await fetch(`${API_BASE}/api/players`);
    const checkData = await checkResponse.json();
    const updatedPlayer = checkData.players.find(p => p.id === testPlayer.id);
    
    console.log(`üìç –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    
    if (updatedPlayer.x === testX && updatedPlayer.y === testY) {
      console.log('\nüéâ –ü–†–û–ë–õ–ï–ú–ê –†–ï–®–ï–ù–ê!');
      console.log('üî• HTTP 404 –∏—Å—á–µ–∑! Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç!');
      console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000');
      console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin');
      console.log('3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ª—é–±—É—é —Ñ–∏—à–∫—É');
      console.log('4. HTTP 404 –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è!');
    } else {
      console.log('\n‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å!');
      console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å: x=${testX}, y=${testY}`);
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    }
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê:');
    console.error(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd server && node server.js');
    }
  }
}

finalFix();
