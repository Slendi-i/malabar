#!/bin/bash

# –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SQLite3 –∏ –∑–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ backend

echo "üîß –§–ò–ù–ê–õ–¨–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï SQLITE3"
echo "================================"

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
pm2 stop malabar-backend-simple 2>/dev/null || true
pm2 stop malabar-backend-safe 2>/dev/null || true
pm2 delete malabar-backend-simple 2>/dev/null || true
pm2 delete malabar-backend-safe 2>/dev/null || true

# 2. –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ SQLite3
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥—É–ª—è SQLite3..."
cd server

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –º–æ–¥—É–ª–µ–π..."
rm -rf node_modules/sqlite3
rm -rf node_modules/.cache
npm cache clean --force

# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3 —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∫–æ–º–ø–∏–ª—è—Ü–∏–µ–π
echo "üì¶ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ sqlite3..."
npm install sqlite3 --build-from-source

# –ï—Å–ª–∏ –Ω–µ –ø–æ–º–æ–≥–ª–æ, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±..."
    npm install sqlite3 --no-optional --build-from-source
fi

# –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º prebuilt –≤–µ—Ä—Å–∏—é
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è  –ü—Ä–æ–±—É–µ–º prebuilt –≤–µ—Ä—Å–∏—é..."
    npm install sqlite3@5.1.6 --save
fi

# 3. –¢–µ—Å—Ç sqlite3
echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sqlite3..."
node -e "
try {
  const sqlite3 = require('sqlite3');
  console.log('‚úÖ SQLite3 –º–æ–¥—É–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
  const db = new sqlite3.Database(':memory:');
  db.close();
  console.log('‚úÖ SQLite3 –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
} catch (e) {
  console.log('‚ùå –û—à–∏–±–∫–∞ SQLite3:', e.message);
  process.exit(1);
}
"

if [ $? -eq 0 ]; then
    echo "‚úÖ SQLite3 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    
    # 4. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ server.js –µ—Å–ª–∏ –µ—Å—Ç—å –±—ç–∫–∞–ø
    if [ -f "server.js.with-websocket" ]; then
        echo "üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ server.js..."
        cp server.js.with-websocket server.js
    fi
    
    # 5. –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ backend
    echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ backend..."
    pm2 start server.js --name malabar-backend
    
else
    echo "‚ùå SQLite3 –≤—Å–µ –µ—â–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Ä—Å–∏—é –±–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤–µ—Ä—Å–∏—é –±–µ–∑ SQLite
    cat > server-no-db.js << 'EOF'
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();
const PORT = process.env.PORT || 3001;

app.use(cors());
app.use(bodyParser.json({ limit: '50mb' }));

// In-memory storage
let players = Array.from({ length: 12 }, (_, i) => ({
  id: i + 1,
  name: `Player ${i + 1}`,
  avatar: `/avatars/player${i + 1}.jpg`,
  socialLinks: { discord: '', twitter: '', instagram: '' },
  stats: { wins: 0, losses: 0, draws: 0 },
  games: [],
  isOnline: false,
  position: i + 1
}));

app.get('/api/health', (req, res) => {
  res.json({ status: 'OK', timestamp: new Date().toISOString() });
});

app.get('/api/players', (req, res) => {
  res.json(players);
});

app.put('/api/players', (req, res) => {
  if (Array.isArray(req.body)) {
    players = req.body;
    res.json({ message: 'Players updated successfully' });
  } else {
    res.status(400).json({ error: 'Invalid data' });
  }
});

app.get('/api/users/current', (req, res) => {
  res.json({ id: -1, username: 'Guest', isLoggedIn: false });
});

app.post('/api/users/current', (req, res) => {
  res.json({ message: 'Login successful' });
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(`Server running on port ${PORT} (no database)`);
});
EOF
    
    pm2 start server-no-db.js --name malabar-backend-nodb
fi

cd ..

# 6. –û–∂–∏–¥–∞–Ω–∏–µ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ (5 —Å–µ–∫—É–Ω–¥)..."
sleep 5

# 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üìä –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
pm2 status

echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:"
echo "Backend health check:"
curl -s http://localhost:3001/api/health && echo "" || echo "‚ùå Backend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "Players API:"
curl -s http://localhost:3001/api/players | head -100 && echo "" || echo "‚ùå Players API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo "Frontend:"
curl -s -I http://localhost:3000 | head -1 || echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

echo ""
echo "‚úÖ –†–ï–ó–£–õ–¨–¢–ê–¢:"
echo "1. http://vet-klinika-moscow.ru - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å"
echo "2. http://46.173.17.229:3000 - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å"  
echo "3. http://46.173.17.229:3001/api/health - –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å"
echo ""
echo "üìã –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ —Ç—Ä–∏ –∞–¥—Ä–µ—Å–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!"

# 8. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
pm2 save
echo "üíæ PM2 –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
