#!/usr/bin/env node

/**
 * üéØ VPS –¢–ï–°–¢ - –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch (Node.js 18+)
 */

const API_BASE = 'http://localhost:3001';

async function vpsTest() {
  console.log('üéØ VPS –¢–ï–°–¢ –ö–û–û–†–î–ò–ù–ê–¢');
  console.log('====================');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${API_BASE}/api/health`);
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç: ${healthResponse.status}`);
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤...');
    const playersResponse = await fetch(`${API_BASE}/api/players`);
    const playersData = await playersResponse.json();
    const players = playersData.players;
    console.log(`‚úÖ –ò–≥—Ä–æ–∫–æ–≤ –ø–æ–ª—É—á–µ–Ω–æ: ${players.length}`);
    
    if (players.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
      return;
    }
    
    const testPlayer = players[0];
    console.log(`üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞ ${testPlayer.id}: ${testPlayer.name}`);
    console.log(`üìç –¢–µ–∫—É—â–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${testPlayer.x}, y=${testPlayer.y}`);
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º PUT –∑–∞–ø—Ä–æ—Å
    console.log('\n3. –¢–µ—Å—Ç PUT –∑–∞–ø—Ä–æ—Å–∞...');
    const testX = Math.round(Math.random() * 800);
    const testY = Math.round(Math.random() * 600);
    
    console.log(`üì§ PUT ${API_BASE}/api/players/${testPlayer.id}`);
    console.log(`üì§ –î–∞–Ω–Ω—ã–µ: {x: ${testX}, y: ${testY}}`);
    
    const putResponse = await fetch(`${API_BASE}/api/players/${testPlayer.id}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        x: testX,
        y: testY
      })
    });
    
    console.log(`‚úÖ PUT —Å—Ç–∞—Ç—É—Å: ${putResponse.status}`);
    
    if (!putResponse.ok) {
      const errorText = await putResponse.text();
      console.error(`‚ùå PUT –æ—à–∏–±–∫–∞: ${putResponse.status} - ${errorText}`);
      return;
    }
    
    const putData = await putResponse.json();
    console.log(`üìã PUT –æ—Ç–≤–µ—Ç:`, putData);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞...');
    const checkResponse = await fetch(`${API_BASE}/api/players`);
    const checkData = await checkResponse.json();
    const updatedPlayer = checkData.players.find(p => p.id === testPlayer.id);
    
    console.log(`üìç –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    
    if (updatedPlayer.x === testX && updatedPlayer.y === testY) {
      console.log('\nüéâ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç!');
      console.log('üî• –¢–µ–ø–µ—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ HTTP 500!');
      console.log('\nüì± –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
      console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000');
      console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin');
      console.log('3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –ª—é–±—É—é —Ñ–∏—à–∫—É');
      console.log('4. HTTP 500 –¥–æ–ª–∂–µ–Ω –∏—Å—á–µ–∑–Ω—É—Ç—å!');
    } else {
      console.log('\n‚ùå –¢–ï–°–¢ –ü–†–û–í–ê–õ–ï–ù! –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∏—Å—å!');
      console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å: x=${testX}, y=${testY}`);
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    }
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê VPS –¢–ï–°–¢–ê:');
    console.error(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° –†–ï–®–ï–ù–ò–Ø:');
      console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: cd server && node server.js');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3001');
      console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');
    } else if (error.message.includes('fetch')) {
      console.log('\nüí° –†–ï–®–ï–ù–ò–Ø:');
      console.log('1. –û–±–Ω–æ–≤–∏—Ç–µ Node.js –¥–æ –≤–µ—Ä—Å–∏–∏ 18+');
      console.log('2. –ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ axios: npm install axios');
      console.log('3. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ curl –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    } else {
      console.log('\nüí° –†–ï–®–ï–ù–ò–Ø:');
      console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É');
      console.log('2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞');
      console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É: node diagnose-and-fix-db.js');
    }
  }
}

vpsTest();
