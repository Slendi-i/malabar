#!/bin/bash

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –∑–∞–≤–∏—Å–∞–Ω–∏—è

echo "üì¶ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
echo "==========================================="

GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() { echo -e "${GREEN}[OK]${NC} $1"; }
error() { echo -e "${RED}[ERROR]${NC} $1"; }
warn() { echo -e "${YELLOW}[WARN]${NC} $1"; }
info() { echo -e "${BLUE}[INFO]${NC} $1"; }

cd /var/www/malabar || { error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"; exit 1; }

echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 10-20 –º–∏–Ω—É—Ç"
echo "–ë—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç—Ç–∞–ø–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏"
echo ""

# –§—É–Ω–∫—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
safe_install() {
    local DIR=$1
    local NAME=$2
    local MAX_TIME=$3
    
    echo ""
    info "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ $NAME (–º–∞–∫—Å–∏–º—É–º $MAX_TIME —Å–µ–∫—É–Ω–¥)..."
    
    cd "$DIR"
    
    # –ü–æ–ø—ã—Ç–∫–∞ 1: –æ–±—ã—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    echo "–ü–æ–ø—ã—Ç–∫–∞ 1: –ø–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞..."
    timeout $MAX_TIME npm install --progress=false 2>/dev/null &
    INSTALL_PID=$!
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    local elapsed=0
    while kill -0 $INSTALL_PID 2>/dev/null; do
        sleep 10
        elapsed=$((elapsed + 10))
        echo "  ... $elapsed —Å–µ–∫ ($NAME)"
        
        if [ $elapsed -ge $MAX_TIME ]; then
            echo "  –ü—Ä–µ–≤—ã—à–µ–Ω —Ç–∞–π–º–∞—É—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
            kill $INSTALL_PID 2>/dev/null
            wait $INSTALL_PID 2>/dev/null
            break
        fi
    done
    
    wait $INSTALL_PID 2>/dev/null
    RESULT=$?
    
    if [ $RESULT -eq 0 ] && [ -d "node_modules" ]; then
        log "$NAME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é"
        return 0
    else
        warn "$NAME: –ø–æ–ø—ã—Ç–∫–∞ 1 –Ω–µ —É–¥–∞–ª–∞—Å—å, –ø—Ä–æ–±—É–µ–º production..."
        
        # –ü–æ–ø—ã—Ç–∫–∞ 2: production —Ç–æ–ª—å–∫–æ
        timeout $((MAX_TIME/2)) npm install --production --no-optional 2>/dev/null
        
        if [ $? -eq 0 ] && [ -d "node_modules" ]; then
            log "$NAME —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (production —Ä–µ–∂–∏–º)"
            return 0
        else
            error "$NAME: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å"
            return 1
        fi
    fi
}

echo ""
echo "üîß –≠–¢–ê–ü 1: –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
echo "==============================="

safe_install "." "—Ñ—Ä–æ–Ω—Ç–µ–Ω–¥" 300
FRONTEND_RESULT=$?

FRONTEND_COUNT=$(ls node_modules 2>/dev/null | wc -l)
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: $FRONTEND_COUNT"

echo ""
echo "üîß –≠–¢–ê–ü 2: –ë—ç–∫–µ–Ω–¥ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"  
echo "============================="

safe_install "server" "–±—ç–∫–µ–Ω–¥" 180
BACKEND_RESULT=$?

cd ..

BACKEND_COUNT=$(ls server/node_modules 2>/dev/null | wc -l)
echo "–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –º–æ–¥—É–ª–µ–π –±—ç–∫–µ–Ω–¥–∞: $BACKEND_COUNT"

echo ""
echo "üìä –†–ï–ó–£–õ–¨–¢–ê–¢ –£–°–¢–ê–ù–û–í–ö–ò"
echo "====================="

echo "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
echo "  ‚Ä¢ –§—Ä–æ–Ω—Ç–µ–Ω–¥: $FRONTEND_COUNT –º–æ–¥—É–ª–µ–π"
echo "  ‚Ä¢ –ë—ç–∫–µ–Ω–¥: $BACKEND_COUNT –º–æ–¥—É–ª–µ–π"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –º–æ–¥—É–ª–∏
echo ""
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π:"

CRITICAL_FRONTEND=("react" "next" "@mui/material")
for module in "${CRITICAL_FRONTEND[@]}"; do
    if [ -d "node_modules/$module" ]; then
        log "$module ‚úì"
    else
        error "$module –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    fi
done

CRITICAL_BACKEND=("express" "sqlite3" "ws")
for module in "${CRITICAL_BACKEND[@]}"; do
    if [ -d "server/node_modules/$module" ]; then
        log "$module ‚úì"
    else
        error "$module –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!"
    fi
done

echo ""
echo "üíæ –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
df -h . | head -2

echo ""
if [ "$FRONTEND_COUNT" -gt 50 ] && [ "$BACKEND_COUNT" -gt 10 ]; then
    log "üéâ –ü–û–õ–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!"
    echo ""
    echo "üöÄ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
    echo "1. –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞: ./build-project-safe-vps.sh"
    echo "2. –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞: ./start-server-simple-vps.sh"
    echo "3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ./test-simple-vps.sh"
elif [ "$FRONTEND_COUNT" -gt 20 ] && [ "$BACKEND_COUNT" -gt 5 ]; then
    warn "‚ö†Ô∏è –ß–ê–°–¢–ò–ß–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê (–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã)"
    echo ""
    echo "üöÄ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å:"
    echo "1. ./start-server-simple-vps.sh"
    echo "2. ./test-simple-vps.sh"
    echo ""
    echo "üí° –ï—Å–ª–∏ –±—É–¥—É—Ç –æ—à–∏–±–∫–∏, –¥–æ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –º–æ–¥—É–ª–∏:"
    echo "   npm install –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π_–º–æ–¥—É–ª—å"
else
    error "‚ùå –£–°–¢–ê–ù–û–í–ö–ê –ù–ï –£–î–ê–õ–ê–°–¨"
    echo ""
    echo "üîß –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
    echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç: ping google.com"
    echo "2. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à: npm cache clean --force"
    echo "3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –º–æ–¥—É–ª–µ–π:"
    echo "   npm install react next express sqlite3"
    echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ: df -h"
fi

echo ""
echo "üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  ‚Ä¢ –°—Ç–∞—Ç—É—Å —É—Å—Ç–∞–Ω–æ–≤–∫–∏: ls node_modules | wc -l"  
echo "  ‚Ä¢ –†–∞–∑–º–µ—Ä: du -sh node_modules server/node_modules"
echo "  ‚Ä¢ –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞: rm -rf node_modules && npm install"
