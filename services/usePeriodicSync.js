import { useEffect, useRef, useCallback, useState } from 'react';
import apiService from './apiService';

/**
 * üöÄ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø
 * –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –ë–î
 */
export function usePeriodicSync(players, setPlayers, currentUser, setCurrentUser) {
  const syncIntervalRef = useRef(null);
  const lastSyncRef = useRef(Date.now());
  const [syncStatus, setSyncStatus] = useState('idle');
  const [lastSyncTime, setLastSyncTime] = useState(null);
  const isInitializedRef = useRef(false);

  // üöÄ –ü–û–õ–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –í–°–ï–• –î–ê–ù–ù–´–• (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
  const performFullSync = useCallback(async () => {
    console.log('üîÑ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
    setSyncStatus('syncing');
    
    try {
      // 1. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–æ–≤ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
      console.log('üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–∫–æ–≤ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏...');
      const playersResponse = await apiService.getPlayers();
      const playersData = playersResponse.players || [];
      
      console.log(`üì• –ü–æ–ª—É—á–µ–Ω–æ ${playersData.length} –∏–≥—Ä–æ–∫–æ–≤ –∏–∑ –ë–î`);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä–æ–∫–æ–≤
      setPlayers(playersData);
      
      // üöÄ –û–ë–ù–û–í–õ–Ø–ï–ú –ü–û–ó–ò–¶–ò–ò –§–ò–®–ï–ö –≤ DOM
      playersData.forEach(player => {
        if (player.x !== undefined && player.y !== undefined) {
          console.log(`üìç –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ñ–∏—à–∫–∏ ${player.id}: (${player.x}, ${player.y})`);
          
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –≤ DOM
          const playerElement = document.querySelector(`[data-player-id="${player.id}"]`);
          if (playerElement) {
            playerElement.style.left = `${player.x}px`;
            playerElement.style.top = `${player.y}px`;
            console.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è —Ñ–∏—à–∫–∏ ${player.id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –≤ DOM`);
          } else {
            console.warn(`‚ö†Ô∏è –§–∏—à–∫–∞ ${player.id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ DOM`);
          }
        }
      });
      
      // 2. –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (currentUser && currentUser.id) {
        console.log('üë§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const userResponse = await apiService.getCurrentUser();
        if (userResponse) {
          setCurrentUser(userResponse);
          console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω:', userResponse.name);
        }
      }
      
      // 3. –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      const now = Date.now();
      lastSyncRef.current = now;
      setLastSyncTime(new Date(now));
      
      console.log('‚úÖ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ó–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      setSyncStatus('success');
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
      setTimeout(() => setSyncStatus('idle'), 2000);
      
    } catch (error) {
      console.error('‚ùå P–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –û—à–∏–±–∫–∞:', error);
      setSyncStatus('error');
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –æ—à–∏–±–∫–∏ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => setSyncStatus('idle'), 5000);
    }
  }, [setPlayers, setCurrentUser, currentUser]);

  // üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø (–ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö) - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è
  const forceSync = useCallback(async () => {
    console.log('‚ö° –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ...');
    await performFullSync();
  }, [performFullSync]);

  // üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò
  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    if (typeof window === 'undefined') {
      console.log('‚è∏Ô∏è –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ (—Å–µ—Ä–≤–µ—Ä–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥)');
      return;
    }
    
    console.log('üöÄ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    
    // –ü–µ—Ä–≤–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å—Ä–∞–∑—É
    performFullSync();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –Ω–∞ 10 —Å–µ–∫—É–Ω–¥
    syncIntervalRef.current = setInterval(() => {
      console.log('‚è∞ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (10 —Å–µ–∫)');
      performFullSync();
    }, 10000); // 10 —Å–µ–∫—É–Ω–¥
    
    console.log('‚úÖ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ò–Ω—Ç–µ—Ä–≤–∞–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ 10 —Å–µ–∫—É–Ω–¥');

    // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (syncIntervalRef.current) {
        clearInterval(syncIntervalRef.current);
        console.log('üßπ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ—á–∏—â–µ–Ω');
      }
    };
  }, [performFullSync]);

  // üöÄ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø–• (debounced)
  const syncOnChange = useCallback(() => {
    console.log('üîÑ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø –ü–†–ò –ò–ó–ú–ï–ù–ï–ù–ò–Ø–•: –ó–∞–ø—É—Å–∫–∞–µ–º —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã...');
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π timeout
    if (syncIntervalRef.current) {
      clearInterval(syncIntervalRef.current);
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      performFullSync();
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
      syncIntervalRef.current = setInterval(() => {
        console.log('‚è∞ –ü–ï–†–ò–û–î–ò–ß–ï–°–ö–ê–Ø –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø: –í—Ä–µ–º—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (10 —Å–µ–∫)');
        performFullSync();
      }, 10000);
    }, 2000);
  }, [performFullSync]);

  return {
    syncStatus,
    lastSyncTime,
    syncOnChange,
    isSyncing: syncStatus === 'syncing'
  };
}
