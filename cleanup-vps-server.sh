#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ VPS —Å–µ—Ä–≤–µ—Ä–∞
# –í–ù–ò–ú–ê–ù–ò–ï: –ü–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é!

echo "=== –û–ß–ò–°–¢–ö–ê VPS –°–ï–†–í–ï–†–ê ==="
echo "–î–∞—Ç–∞: $(date)"
echo

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞
echo "–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —É–¥–∞–ª–∏—Ç —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–Ω–∏–º–∞—é—Ç –º–µ—Å—Ç–æ."
echo "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ (./backup-important-files.sh)"
echo
read -p "–í—ã —Å–æ–∑–¥–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é? (y/N): " confirm
if [[ $confirm != [yY] ]]; then
    echo "–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é: ./backup-important-files.sh"
    exit 1
fi

echo
read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ—á–∏—Å—Ç–∫—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ! (y/N): " confirm2
if [[ $confirm2 != [yY] ]]; then
    echo "–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞."
    exit 1
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ—Å—Ç–æ –¥–æ –æ—á–∏—Å—Ç–∫–∏
echo
echo "=== –ú–ï–°–¢–û –ù–ê –î–ò–°–ö–ï –î–û –û–ß–ò–°–¢–ö–ò ==="
df -h . | head -2
echo

# –°—á–µ—Ç—á–∏–∫ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞
TOTAL_FREED=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
safe_remove() {
    local target="$1"
    local description="$2"
    
    if [ -e "$target" ]; then
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
        SIZE_BEFORE=$(du -s "$target" 2>/dev/null | cut -f1 || echo "0")
        
        rm -rf "$target" 2>/dev/null
        if [ $? -eq 0 ]; then
            echo "‚úì –£–¥–∞–ª–µ–Ω–æ: $description ($((SIZE_BEFORE/1024)) MB)"
            TOTAL_FREED=$((TOTAL_FREED + SIZE_BEFORE))
        else
            echo "‚úó –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: $description"
        fi
    else
        echo "- –ù–µ –Ω–∞–π–¥–µ–Ω–æ: $description"
    fi
}

echo "–ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É..."

# 1. –û—á–∏—Å—Ç–∫–∞ node_modules (–º–æ–∂–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å)
echo
echo "=== –û–ß–ò–°–¢–ö–ê NODE_MODULES ==="
safe_remove "node_modules" "node_modules (–∫–æ—Ä–µ–Ω—å)"
safe_remove "server/node_modules" "server/node_modules"

# 2. –û—á–∏—Å—Ç–∫–∞ build —Ñ–∞–π–ª–æ–≤ Next.js (–ø–µ—Ä–µ—Å–æ–±–µ—Ä–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
echo
echo "=== –û–ß–ò–°–¢–ö–ê BUILD –§–ê–ô–õ–û–í ==="
safe_remove ".next" "Next.js build cache"
safe_remove "out" "Static export files"

# 3. –û—á–∏—Å—Ç–∫–∞ npm/yarn –∫—ç—à–∞
echo
echo "=== –û–ß–ò–°–¢–ö–ê NPM –ö–≠–®–ê ==="
if command -v npm &> /dev/null; then
    echo "–û—á–∏—â–∞–µ–º npm cache..."
    npm cache clean --force 2>/dev/null && echo "‚úì npm cache –æ—á–∏—â–µ–Ω" || echo "‚úó –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ npm cache"
fi

if command -v yarn &> /dev/null; then
    echo "–û—á–∏—â–∞–µ–º yarn cache..."
    yarn cache clean 2>/dev/null && echo "‚úì yarn cache –æ—á–∏—â–µ–Ω" || echo "‚úó –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ yarn cache"
fi

# 4. –û—á–∏—Å—Ç–∫–∞ git –∏—Å—Ç–æ—Ä–∏–∏ (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
echo
echo "=== –û–ß–ò–°–¢–ö–ê GIT –ò–°–¢–û–†–ò–ò ==="
read -p "–û—á–∏—Å—Ç–∏—Ç—å git –∏—Å—Ç–æ—Ä–∏—é? –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –∫–æ–º–º–∏—Ç—ã! (y/N): " git_confirm
if [[ $git_confirm == [yY] ]]; then
    if [ -d ".git" ]; then
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏
        echo "–°–æ–∑–¥–∞–µ–º backup —Ç–µ–∫—É—â–µ–≥–æ git config..."
        cp .git/config git_config_backup 2>/dev/null
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä .git –¥–æ —É–¥–∞–ª–µ–Ω–∏—è
        GIT_SIZE_BEFORE=$(du -s .git 2>/dev/null | cut -f1 || echo "0")
        
        # –£–¥–∞–ª—è–µ–º .git –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        rm -rf .git
        git init . 2>/dev/null
        
        # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        if [ -f "git_config_backup" ]; then
            cp git_config_backup .git/config 2>/dev/null
            rm git_config_backup
        fi
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –Ω–æ–≤—ã–π –∫–æ–º–º–∏—Ç
        git add . 2>/dev/null
        git commit -m "Clean repository after VPS cleanup" 2>/dev/null
        
        echo "‚úì Git –∏—Å—Ç–æ—Ä–∏—è –æ—á–∏—â–µ–Ω–∞ ($((GIT_SIZE_BEFORE/1024)) MB)"
        TOTAL_FREED=$((TOTAL_FREED + GIT_SIZE_BEFORE))
    else
        echo "- Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
else
    echo "Git –∏—Å—Ç–æ—Ä–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
fi

# 5. –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo
echo "=== –û–ß–ò–°–¢–ö–ê –í–†–ï–ú–ï–ù–ù–´–• –§–ê–ô–õ–û–í ==="
safe_remove "*.log" "Log —Ñ–∞–π–ª—ã"
safe_remove "*.tmp" "–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
safe_remove ".DS_Store" "macOS —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã"
safe_remove "Thumbs.db" "Windows —Å–ª—É–∂–µ–±–Ω—ã–µ —Ñ–∞–π–ª—ã"

# –û—á–∏—Å—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏
find . -name "*.log" -type f -delete 2>/dev/null && echo "‚úì –£–¥–∞–ª–µ–Ω—ã .log —Ñ–∞–π–ª—ã"
find . -name "*.tmp" -type f -delete 2>/dev/null && echo "‚úì –£–¥–∞–ª–µ–Ω—ã .tmp —Ñ–∞–π–ª—ã"
find . -name ".DS_Store" -type f -delete 2>/dev/null && echo "‚úì –£–¥–∞–ª–µ–Ω—ã .DS_Store —Ñ–∞–π–ª—ã"

# 6. –û—á–∏—Å—Ç–∫–∞ PM2 –ª–æ–≥–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å)
echo
echo "=== –û–ß–ò–°–¢–ö–ê PM2 –õ–û–ì–û–í ==="
if command -v pm2 &> /dev/null; then
    pm2 flush 2>/dev/null && echo "‚úì PM2 –ª–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã" || echo "- PM2 –ª–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# 7. –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo
echo "=== –ü–ï–†–ï–£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô ==="
read -p "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ–π—á–∞—Å? (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è) (y/N): " install_confirm
if [[ $install_confirm == [yY] ]]; then
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
    if command -v npm &> /dev/null; then
        npm install --production 2>/dev/null && echo "‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∫–æ—Ä–Ω—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    if [ -f "server/package.json" ]; then
        cd server
        npm install --production 2>/dev/null && echo "‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        cd ..
    fi
else
    echo "–í–ê–ñ–ù–û: –ù–µ –∑–∞–±—É–¥—å—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–æ–∑–∂–µ:"
    echo "npm install && cd server && npm install"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
echo
echo "=== –ò–¢–û–ì–ò –û–ß–ò–°–¢–ö–ò ==="
df -h . | head -2
echo

# –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MB
TOTAL_FREED_MB=$((TOTAL_FREED/1024))
echo "–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ: ${TOTAL_FREED_MB} MB"

echo
echo "=== –ß–¢–û –ë–´–õ–û –£–î–ê–õ–ï–ù–û ==="
echo "‚úì node_modules (–º–æ–∂–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: npm install)"
echo "‚úì .next –∏ out (–ø–µ—Ä–µ—Å–æ–±–µ—Ä–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"
echo "‚úì npm/yarn –∫—ç—à"
echo "‚úì –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ª–æ–≥–∏"
if [[ $git_confirm == [yY] ]]; then
    echo "‚úì Git –∏—Å—Ç–æ—Ä–∏—è (—Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)"
fi
echo

echo "=== –ß–¢–û –ù–ï –ë–´–õ–û –ó–ê–¢–†–û–ù–£–¢–û ==="
echo "‚úì –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (.db —Ñ–∞–π–ª—ã)"
echo "‚úì –ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ (pages, components, services)"
echo "‚úì –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
echo "‚úì –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (public)"
echo "‚úì –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è"
echo

echo "=== –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò ==="
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
echo "2. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
echo "3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ—á–∏—Å—Ç–∫—É —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤"
echo

echo "–û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! üéâ"
