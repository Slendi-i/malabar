#!/usr/bin/env node

/**
 * üîß –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ö–û–û–†–î–ò–ù–ê–¢
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–∏—à–µ–∫ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
 */

const API_BASE = 'http://localhost:3001';

async function coordsSyncTest() {
  console.log('üîß –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ö–û–û–†–î–ò–ù–ê–¢');
  console.log('================================');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${API_BASE}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: ${healthResponse.status}`);
    }
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const initialResponse = await fetch(`${API_BASE}/api/players`);
    const initialData = await initialResponse.json();
    const initialPlayers = initialData.players || [];
    
    if (initialPlayers.length === 0) {
      throw new Error('–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }
    
    const testPlayer = initialPlayers[0];
    console.log(`üìç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–≥—Ä–æ–∫–∞ ${testPlayer.id}: ${testPlayer.name}`);
    console.log(`üìç –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${testPlayer.x}, y=${testPlayer.y}`);
    
    // 3. –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —á–µ—Ä–µ–∑ API
    console.log('\n3. –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —á–µ—Ä–µ–∑ API...');
    const testX = Math.round(Math.random() * 800);
    const testY = Math.round(Math.random() * 600);
    
    console.log(`üì§ –ò–∑–º–µ–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞: (${testX}, ${testY})`);
    
    const updateResponse = await fetch(`${API_BASE}/api/coordinates/${testPlayer.id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        x: testX,
        y: testY
      })
    });
    
    if (!updateResponse.ok) {
      const errorText = await updateResponse.text();
      throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: ${updateResponse.status} - ${errorText}`);
    }
    
    const updateData = await updateResponse.json();
    console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —á–µ—Ä–µ–∑ API:', updateData);
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –ë–î
    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î...');
    const checkResponse = await fetch(`${API_BASE}/api/players`);
    const checkData = await checkResponse.json();
    const updatedPlayer = checkData.players.find(p => p.id === testPlayer.id);
    
    if (!updatedPlayer) {
      throw new Error('–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    }
    
    console.log(`üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ë–î: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    
    if (updatedPlayer.x === testX && updatedPlayer.y === testY) {
      console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ë–î!');
    } else {
      console.log('‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –≤ –ë–î!');
      console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å: x=${testX}, y=${testY}`);
      console.log(`–ü–æ–ª—É—á–µ–Ω–æ: x=${updatedPlayer.x}, y=${updatedPlayer.y}`);
    }
    
    // 5. –¢–µ—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('\n5. –¢–µ—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    console.log('‚è∞ –ñ–¥—ë–º 12 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    
    await new Promise(resolve => setTimeout(resolve, 12000));
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å
    console.log('\n6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    const syncResponse = await fetch(`${API_BASE}/api/players`);
    const syncData = await syncResponse.json();
    const syncPlayer = syncData.players.find(p => p.id === testPlayer.id);
    
    if (syncPlayer) {
      console.log(`üìç –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${syncPlayer.x}, y=${syncPlayer.y}`);
      
      if (syncPlayer.x === testX && syncPlayer.y === testY) {
        console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
      } else {
        console.log('‚ùå –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å!');
        console.log(`–û–∂–∏–¥–∞–ª–æ—Å—å: x=${testX}, y=${testY}`);
        console.log(`–ü–æ–ª—É—á–µ–Ω–æ: x=${syncPlayer.x}, y=${syncPlayer.y}`);
      }
    } else {
      console.log('‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
    
    // 7. –¢–µ—Å—Ç WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log('\n7. –¢–µ—Å—Ç WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π...');
    console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ WebSocket –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã...');
    
    // –ò–º–∏—Ç–∏—Ä—É–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ
    const wsMessage = {
      type: 'player_position_update',
      playerId: testPlayer.id,
      x: testX + 10,
      y: testY + 10
    };
    
    console.log('üì§ –ò–º–∏—Ç–∏—Ä—É–µ–º WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ:', wsMessage);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —á–µ—Ä–µ–∑ API (—ç—Ç–æ –¥–æ–ª–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å WebSocket broadcast)
    const wsTestResponse = await fetch(`${API_BASE}/api/coordinates/${testPlayer.id}`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        x: testX + 10,
        y: testY + 10
      })
    });
    
    if (wsTestResponse.ok) {
      console.log('‚úÖ WebSocket —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è');
    }
    
    console.log('\nüéâ –¢–ï–°–¢ –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ö–û–û–†–î–ò–ù–ê–¢ –ó–ê–í–ï–†–®–Å–ù!');
    console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –¥–≤—É—Ö –≤–∫–ª–∞–¥–∫–∞—Ö');
    console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin –≤ –æ–±–µ–∏—Ö –≤–∫–ª–∞–¥–∫–∞—Ö');
    console.log('3. –ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∏—à–∫—É –≤ –æ–¥–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ');
    console.log('4. –§–∏—à–∫–∞ –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å—Å—è –≤–æ –≤—Ç–æ—Ä–æ–π –≤–∫–ª–∞–¥–∫–µ!');
    console.log('5. –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥');
    
    console.log('\nüî• –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:');
    console.log('‚Ä¢ WebSocket —Å–æ–æ–±—â–µ–Ω–∏—è –≤–∫–ª—é—á–∞—é—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã');
    console.log('‚Ä¢ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø–æ–∑–∏—Ü–∏–∏ —Ñ–∏—à–µ–∫');
    console.log('‚Ä¢ –ü–æ–∑–∏—Ü–∏–∏ —Ñ–∏—à–µ–∫ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    console.log('‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ö–û–û–†–î–ò–ù–ê–¢:');
    console.error(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 restart malabar-server');
    }
  }
}

coordsSyncTest();
