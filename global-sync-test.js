#!/usr/bin/env node

/**
 * üöÄ –¢–ï–°–¢ –ì–õ–û–ë–ê–õ–¨–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
 */

const API_BASE = 'http://localhost:3001';

async function globalSyncTest() {
  console.log('üöÄ –¢–ï–°–¢ –ì–õ–û–ë–ê–õ–¨–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò');
  console.log('================================');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä–≤–µ—Ä
    console.log('\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞...');
    const healthResponse = await fetch(`${API_BASE}/api/health`);
    if (!healthResponse.ok) {
      throw new Error(`–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç: ${healthResponse.status}`);
    }
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    // 2. –ü–æ–ª—É—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const initialResponse = await fetch(`${API_BASE}/api/players`);
    const initialData = await fetch(`${API_BASE}/api/users/current`);
    
    const initialPlayers = initialResponse.ok ? (await initialResponse.json()).players : [];
    const initialUser = initialData.ok ? await initialData.json() : null;
    
    console.log(`üì• –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${initialPlayers.length} –∏–≥—Ä–æ–∫–æ–≤`);
    if (initialUser) {
      console.log(`üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${initialUser.name}`);
    }
    
    // 3. –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    console.log('\n3. –¢–µ—Å—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö...');
    if (initialPlayers.length > 0) {
      const testPlayer = initialPlayers[0];
      const testX = Math.round(Math.random() * 800);
      const testY = Math.round(Math.random() * 600);
      
      console.log(`üì§ –ò–∑–º–µ–Ω—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–≥—Ä–æ–∫–∞ ${testPlayer.id}: (${testX}, ${testY})`);
      
      const updateResponse = await fetch(`${API_BASE}/api/coordinates/${testPlayer.id}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          x: testX,
          y: testY
        })
      });
      
      if (updateResponse.ok) {
        console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑–º–µ–Ω–µ–Ω—ã');
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç');
      }
    }
    
    // 4. –¢–µ—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('\n4. –¢–µ—Å—Ç –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    console.log('‚è∞ –ñ–¥—ë–º 12 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    
    await new Promise(resolve => setTimeout(resolve, 12000));
    
    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–ª–∏—Å—å
    console.log('\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    const syncResponse = await fetch(`${API_BASE}/api/players`);
    const syncData = await fetch(`${API_BASE}/api/users/current`);
    
    const syncPlayers = syncResponse.ok ? (await syncResponse.json()).players : [];
    const syncUser = syncData.ok ? await syncData.json() : null;
    
    console.log(`üì• –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ${syncPlayers.length} –∏–≥—Ä–æ–∫–æ–≤`);
    if (syncUser) {
      console.log(`üë§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${syncUser.name}`);
    }
    
    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    if (initialPlayers.length > 0 && syncPlayers.length > 0) {
      const initialPlayer = initialPlayers[0];
      const syncPlayer = syncPlayers.find(p => p.id === initialPlayer.id);
      
      if (syncPlayer) {
        console.log(`üìç –ù–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${initialPlayer.x}, y=${initialPlayer.y}`);
        console.log(`üìç –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: x=${syncPlayer.x}, y=${syncPlayer.y}`);
        
        if (syncPlayer.x !== initialPlayer.x || syncPlayer.y !== initialPlayer.y) {
          console.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã!');
        } else {
          console.log('‚ö†Ô∏è –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –±—ã–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏–π)');
        }
      }
    }
    
    // 7. –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    console.log('\n6. –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
    console.log('üîÑ –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
    
    const forceSyncResponse = await fetch(`${API_BASE}/api/players`);
    if (forceSyncResponse.ok) {
      console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç');
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
    
    console.log('\nüéâ –¢–ï–°–¢ –ì–õ–û–ë–ê–õ–¨–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò –ó–ê–í–ï–†–®–Å–ù!');
    console.log('\nüì± –¢–µ–ø–µ—Ä—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
    console.log('1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000');
    console.log('2. –í–æ–π–¥–∏—Ç–µ –∫–∞–∫ admin/admin');
    console.log('3. –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥');
    console.log('4. –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã');
    console.log('5. –ù–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –ë–î –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–Ω–∏–∂–µ–Ω–∞!');
    
    console.log('\nüî• –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:');
    console.log('‚Ä¢ –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥');
    console.log('‚Ä¢ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö');
    console.log('‚Ä¢ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö (–∏–≥—Ä–æ–∫–∏, –ø—Ä–æ—Ñ–∏–ª–∏, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã)');
    console.log('‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –ë–î');
    console.log('‚Ä¢ –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É –≤—Å–µ–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê –ì–õ–û–ë–ê–õ–¨–ù–û–ô –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–ò:');
    console.error(`–°–æ–æ–±—â–µ–Ω–∏–µ: ${error.message}`);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!');
      console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ: pm2 restart malabar-server');
    }
  }
}

globalSyncTest();
